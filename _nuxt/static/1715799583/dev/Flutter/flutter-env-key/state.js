window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1715799583",layout:"default",error:a,serverRendered:true,routePath:"\u002Fdev\u002FFlutter\u002Fflutter-env-key",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}},globalRefs:{},ssrRefs:{"articleMatter-Flutter-flutter-env-key":{info:{title:b,fileName:"flutter-env-key",description:"介紹 Flutter 常見的 API keys 使用方法，主要有三種，可以依情境選擇需要的方式。",createdAt:c,updatedAt:c,tags:["Flutter","env","key"]},content:"\u003Ch6\u003Etags: \u003Ccode\u003EFlutter\u003C\u002Fcode\u003E、\u003Ccode\u003Eenv\u003C\u002Fcode\u003E、\u003Ccode\u003Ekey\u003C\u002Fcode\u003E\u003C\u002Fh6\u003E\n\u003Ch1 id=\"[Note] Flutter 如何隱藏 API Key\" title=\"[Note] Flutter 如何隱藏 API Key\"\u003E[Note] Flutter 如何隱藏 API Key\u003C\u002Fh1\u003E\n\u003Ch2 id=\"前言\" title=\"前言\"\u003E\u003Ca href=\"#前言\"\u003E前言\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E介紹 Flutter 常見的 API keys 使用方法，主要有三種，可以依情境選擇需要的方式。\u003C\u002Fp\u003E\n\u003Cp\u003E內文主要是依照 \u003Ca  href=\"https:\u002F\u002Fcodewithandrea.com\u002Farticles\u002Fflutter-api-keys-dart-define-env-files\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EHow to Store API Keys in Flutter\u003C\u002Fa\u003E 整理出的方法，文章寫得很詳細，非常推薦閱讀 👍\u003C\u002Fp\u003E\n\u003Ch2 id=\"Hard-coding\" title=\"Hard-coding\"\u003E\u003Ca href=\"#Hard-coding\"\u003EHard-coding\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E直接把 key 值寫在 \u003Ccode\u003E.dart\u003C\u002Fcode\u003E 檔案中。\u003C\u002Fp\u003E\n\u003Cp\u003E先在 \u003Ccode\u003Eapi_key.dart\u003C\u002Fcode\u003E 新增 API key，在需要使用的檔案中，引入 \u003Ccode\u003Eapi_key.dart\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F api_key.dart\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E apiKey = \u003Cspan class=\"hljs-string\"\u003E&#x27;AIzaSyBeSYQ8cn6IIwRBbB4hPrn&#x27;\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Step 1. import key 所在的檔案\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;api_key.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003ELocationService\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  Future&lt;\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E&gt; getPlaceId(\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E input) \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E {\n     \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Step 2.直接使用 key 值\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E url =\n        \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fmaps.googleapis.com\u002Fmaps\u002Fapi\u002Fplace\u002Ffindplacefromtext\u002Fjson?input=\u003Cspan class=\"hljs-subst\"\u003E$input\u003C\u002Fspan\u003E&amp;inputtype=textquery&amp;key=\u003Cspan class=\"hljs-subst\"\u003E$apiKey\u003C\u002Fspan\u003E&#x27;\u003C\u002Fspan\u003E;\n\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E response = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E http.\u003Cspan class=\"hljs-keyword\"\u003Eget\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-built_in\"\u003EUri\u003C\u002Fspan\u003E.parse(url));\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E json = convert.jsonDecode(response.body);\n\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E placeId = json[\u003Cspan class=\"hljs-string\"\u003E&#x27;candidates&#x27;\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-string\"\u003E&#x27;place_id&#x27;\u003C\u002Fspan\u003E] \u003Cspan class=\"hljs-keyword\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E placeId;\n  }\n\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E需要注意的地方就是，\u003Cstrong\u003E千萬不要把 \u003Ccode\u003Eapi_key.dart\u003C\u002Fcode\u003E commit 進 git\u003C\u002Fstrong\u003E，需要另外把 \u003Ccode\u003Eapi_key.dart\u003C\u002Fcode\u003E 加入 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E 檔案中：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E# 在 .gitignore 中的檔案，都不會進入 git 版控紀錄\napi_key.dart\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003E優點\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E快速使用\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E缺點\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E無法根據環境去 mapping 對應的 key\u003C\u002Fli\u003E\n\u003Cli\u003Ekey 以明文方式儲存(plaintext)，安全性不高\u003C\u002Fli\u003E\n\u003Cli\u003E可能會因失誤，造成 key 值外洩 e.g. 忘記加進 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cdiv class=\"warning\"\u003E\n\u003Cp\u003E⚠️ \u003Cstrong\u003E提醒：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003Eapi_key.dart\u003C\u002Fcode\u003E 如曾經被 commit 進 git，後續再把它加入到 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E，也沒用，因為都可以在 git history 找到相關 key 資訊，唯一能做的就是銷毀原先的 key，再新增一個新的。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"–dart-define \u002F --dart-define-from-file\" title=\"–dart-define \u002F --dart-define-from-file\"\u003E\u003Ca href=\"#–dart-define \u002F --dart-define-from-file\"\u003E–dart-define \u002F --dart-define-from-file\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E在編譯階段，使用 \u003Ccode\u003E--dart-define\u003C\u002Fcode\u003E 或 \u003Ccode\u003E--dart-define-from-file\u003C\u002Fcode\u003E 將 key 傳入程式中使用。\u003C\u002Fp\u003E\n\u003Ch3\u003E–dart-define\u003C\u002Fh3\u003E\n\u003Cp\u003E在程式中使用 \u003Ccode\u003EString.fromEnvironment(&lt;key-name&gt;)\u003C\u002Fcode\u003E 取得 key，並改用下面指令去 run 程式，將 key 傳入進程式：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003ELocationService\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  Future&lt;\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E&gt; getPlaceId(\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E input) \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F get api key\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E apiKey = \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E.fromEnvironment(\u003Cspan class=\"hljs-string\"\u003E&#x27;API_KEY&#x27;\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (apiKey.isEmpty) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E AssertionError(\u003Cspan class=\"hljs-string\"\u003E&#x27;API_KEY is not set&#x27;\u003C\u002Fspan\u003E);\n    }\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F use api key\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E url = \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fmaps.googleapis.com\u002Fmaps\u002Fapi\u002Fplace\u002Ffindplacefromtext\u002Fjson?input=\u003Cspan class=\"hljs-subst\"\u003E$input\u003C\u002Fspan\u003E&amp;inputtype=textquery&amp;key=\u003Cspan class=\"hljs-subst\"\u003E$apiKey\u003C\u002Fspan\u003E&#x27;\u003C\u002Fspan\u003E;\n    ...\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-variable\"\u003E$flutter\u003C\u002Fspan\u003E run --dart-define API_KEY=AIzaSyBeSYQ8cn\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003E優點\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003Esource code 不會存在 Hard-coding key\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4\u003E缺點\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E複數 keys 時，難以管理\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-variable\"\u003E$flutter\u003C\u002Fspan\u003E run \\\n  --dart-define A_API_KEY= ... \\\n  --dart-define B_API_KEY= ... \\\n  --dart-define C_API_KEY= ...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E在編譯後，key 仍然會被嵌入到發佈版本（release binary）的二進制文件中\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E針對發佈版本（release binary）需要對 Dart 代碼進行混淆（混淆可以讓代碼難以被理解和解讀），降低被反向破譯的風險，可以參考\u003Ca  href=\"https:\u002F\u002Fdocs.flutter.dev\u002Fdeployment\u002Fobfuscate\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E官方推薦做法\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cbr\u002F\u003E\n\u003Ch3\u003E\u003Ccode\u003E--dart-define-from-file\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cp\u003E在 \u003Ccode\u003EFlutter 3.7\u003C\u002Fcode\u003E 後，可以將 API keys 存成一個 json 檔案（需要進 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E），再改用下面指令去 run 程式，將 json 內容傳入進程式：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F api-keys.json\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;GOOGLE_MAP_KEY&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;...&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;A_API_KEY&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;...&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;B_API_KEY&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;...&quot;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-variable\"\u003E$flutter\u003C\u002Fspan\u003E run --dart-define-from-file=api-keys.json\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E程式中一樣使用 \u003Ccode\u003EString.fromEnvironment(&lt;key-name&gt;)\u003C\u002Fcode\u003E 取得 key 值：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E apiKey = \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E.fromEnvironment(\u003Cspan class=\"hljs-string\"\u003E&#x27;GOOGLE_MAP_KEY&#x27;\u003C\u002Fspan\u003E);\n\u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (apiKey.isEmpty) {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F handle error\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F use api key\u003C\u002Fspan\u003E\n...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cbr\u002F\u003E\n\u003Ch4\u003E\u003Ccode\u003E--dart-define-from-file\u003C\u002Fcode\u003E 與 \u003Ccode\u003Elaunch.json\u003C\u002Fcode\u003E 組合技 (VSCode)\u003C\u002Fh4\u003E\n\u003Cp\u003E在 \u003Ccode\u003E.vscode\u002Flaunch.json\u003C\u002Fcode\u003E 中的 \u003Ccode\u003Eargs\u003C\u002Fcode\u003E(會代入在 command line)，加入下列參數：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F .vscode\u002Flaunch.json\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;version&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;0.2.0&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;configurations&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;Launch Development&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;program&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;lib\u002Fmain.dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F add here\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E也可以針對環境，有不一樣的 API keys，i.e. Production 環境使用 \u003Ccode\u003Eapi-keys.prod.json\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F .vscode\u002Flaunch.json\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;version&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;0.2.0&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;configurations&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;Launch Development&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;program&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;lib\u002Fmain.dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;Launch Production&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;program&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;lib\u002Fmain.dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.prod.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdetails class='spoiler'\u003E\u003Csummary\u003E關於 launch.json(組態檔)\u003C\u002Fsummary\u003E\n\u003Cp\u003E\u003Cstrong\u003E\u003Ccode\u003Elaunch.json\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E 是定義調試過程中所需的各種設定，如程式入口、命令列參數、環境變數等。\u003C\u002Fp\u003E\n\u003Cp\u003E除了手動新增檔案，也可以透過 VSCode 自動生成一個，點選 \u003Ccode\u003ERun and Debug\u003C\u002Fcode\u003E &gt; \u003Ccode\u003Ecreate a launch.json file\u003C\u002Fcode\u003E &gt; \u003Ccode\u003EDart &amp; Flutter\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fhackmd.io\u002F_uploads\u002FHydUmehE2.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E新增的檔案內容與上面範例有點不同，因為這份檔案把 \u003Ca  href=\"https:\u002F\u002Fdocs.flutter.dev\u002Ftesting\u002Fbuild-modes\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EflutterMode\u003C\u002Fa\u003E 三個運行模式(\u003Ccode\u003Edebug\u003C\u002Fcode\u003E\u002F\u003Ccode\u003Eprofile\u003C\u002Fcode\u003E\u002F\u003Ccode\u003Erelease\u003C\u002Fcode\u003E) 都列出來了，要加上各個環境 keys 的版本如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F .vscode\u002Flaunch.json\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;version&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;0.2.0&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E&quot;configurations&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;flutter-appworks&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;flutter-appworks (profile mode)&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;flutterMode&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;profile&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;name&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;flutter-appworks (release mode)&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;request&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;launch&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;type&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;dart&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;flutterMode&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;release&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-attr\"\u003E&quot;args&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-string\"\u003E&quot;--dart-define-from-file&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;api-keys.prod.json&quot;\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003E[補充 QA]\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E\nQ. \u003Ccode\u003Eversion\u003C\u002Fcode\u003E 為什麼是 0.2.0 呢？\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E目前沒找到確切為什麼會是 0.2.0 的原因，但\u003Ca  href=\"https:\u002F\u002Fcode.visualstudio.com\u002Fdocs\u002Feditor\u002Fdebugging#_launch-configurations\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E官網範例\u003C\u002Fa\u003E也都是使用 0.2.0 版本，應該是目前 default 值。\u003C\u002Fp\u003E\n\u003Cp\u003E最後也有詢問 chatGPT，指出如果使用的是舊版本的 VSCode 或希望使用不同的配置文件語法，可以將 “version” 更改為 “0.1.0” 或其他版本號。\u003Cbr \u002F\u003E\n:::\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cbr\u002F\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003E補充\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E\n如果是使用其他 IDE，例如 IntelliJ 或 Android Studio，可參考 \u003Ca  href=\"https:\u002F\u002Fwww.jetbrains.com\u002Fhelp\u002Fidea\u002Frun-debug-configuration.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ERun\u002Fdebug configurations\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003C\u002Fdetails\u003E\n\u003Ch4\u003E優點\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003E方便管理多組 keys\u003C\u002Fli\u003E\n\u003Cli\u003E可針對不同環境(dev\u002Fprod)，設置不同 key 的 json 檔案\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4\u003E缺點\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003Ejson 檔案需要加入 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E 清單中 (json 中的 key 也是屬於 hardcode)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\".env 檔案定義 key\" title=\".env 檔案定義 key\"\u003E\u003Ca href=\"#.env 檔案定義 key\"\u003E.env 檔案定義 key\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E把 key 值統一管理在 \u003Ccode\u003E.env\u003C\u002Fcode\u003E 檔案中，會需要配合額外的 package，例如： \u003Ca  href=\"https:\u002F\u002Fpub.dev\u002Fpackages\u002Fenvied\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Ccode\u003Eenvied\u003C\u002Fcode\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003EStep 1. 安裝 \u003Ca  href=\"https:\u002F\u002Fpub.dev\u002Fpackages\u002Fenvied\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Eenvied\u003C\u002Fa\u003E 套件\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ccode\u003Eenvied\u003C\u002Fcode\u003E 可以幫助我們生成一個 Dart class，包含 \u003Ccode\u003E.env\u003C\u002Fcode\u003E 檔案中的值。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E$ flutter pub add envied\n$ flutter pub add --dev envied_generator\n$ flutter pub add --dev build_runner\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 2. 新增 \u003Ccode\u003E.env\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E# .env\nAPI_KEY=AIzaSyBeSYQ8cn6IIwRBbB4hPrn\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 3. 新增 \u003Ccode\u003Eenv.dart\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E 後面會用指令產生，目前會報錯，可以忽略：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F lib\u002Fenv.dart\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;package:envied\u002Fenvied.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Epart\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;env.g.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-meta\"\u003E@Envied\u003C\u002Fspan\u003E(path: \u003Cspan class=\"hljs-string\"\u003E&#x27;.env&#x27;\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EEnv\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-meta\"\u003E@EnviedField\u003C\u002Fspan\u003E(varName: \u003Cspan class=\"hljs-string\"\u003E&#x27;API_KEY&#x27;\u003C\u002Fspan\u003E)\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E apiKey = _Env.apiKey;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上寫法已經足夠使用了，但為了提高安全性，可以使用套件提供的混淆(Obfuscation)功能，需要在 \u003Ccode\u003E@EnviedField\u003C\u002Fcode\u003E 加上 \u003Ccode\u003Eobfuscate: true\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F lib\u002Fenv.dart\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;package:envied\u002Fenvied.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Epart\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;env.g.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-meta\"\u003E@Envied\u003C\u002Fspan\u003E(path: \u003Cspan class=\"hljs-string\"\u003E&#x27;.env&#x27;\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003EEnv\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Add here\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-meta\"\u003E@EnviedField\u003C\u002Fspan\u003E(varName: \u003Cspan class=\"hljs-string\"\u003E&#x27;API_KEY&#x27;\u003C\u002Fspan\u003E, obfuscate: \u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E)\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E apiKey = _Env.apiKey;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003E補充：\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E\n如果使用 \u003Ccode\u003Eobfuscate\u003C\u002Fcode\u003E flag，需要將 \u003Ccode\u003Econst\u003C\u002Fcode\u003E 改成 \u003Ccode\u003Efinal\u003C\u002Fcode\u003E，否則會報錯。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003EStep 4. 產生 \u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-variable\"\u003E$flutter\u003C\u002Fspan\u003E pub run build_runner build --delete-conflicting-outputs\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E執行完後，會產生一份 \u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F GENERATED CODE - DO NOT MODIFY BY HAND\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Epart\u003C\u002Fspan\u003E of \u003Cspan class=\"hljs-string\"\u003E&#x27;env.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F **************************************************************************\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F EnviedGenerator\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F **************************************************************************\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003E_Env\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EList\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-built_in\"\u003Eint\u003C\u002Fspan\u003E&gt; _enviedkeyapiKey = [\n    \u003Cspan class=\"hljs-number\"\u003E2433719592\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-number\"\u003E1273530568\u003C\u002Fspan\u003E,\n    ....\n  ];\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EList\u003C\u002Fspan\u003E&lt;\u003Cspan class=\"hljs-built_in\"\u003Eint\u003C\u002Fspan\u003E&gt; _envieddataapiKey = [\n    \u003Cspan class=\"hljs-number\"\u003E2433719657\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-number\"\u003E1273530497\u003C\u002Fspan\u003E,\n    ....\n  ];\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E apiKey = \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E.fromCharCodes(\n    \u003Cspan class=\"hljs-built_in\"\u003EList\u003C\u002Fspan\u003E.generate(_envieddataapiKey.length, (i) =&gt; i, growable: \u003Cspan class=\"hljs-keyword\"\u003Efalse\u003C\u002Fspan\u003E)\n        .map((i) =&gt; _envieddataapiKey[i] ^ _enviedkeyapiKey[i])\n        .toList(growable: \u003Cspan class=\"hljs-keyword\"\u003Efalse\u003C\u002Fspan\u003E),\n  );\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003E補充：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E如果不在 \u003Ccode\u003E@EnviedField\u003C\u002Fcode\u003E 加上 \u003Ccode\u003Eobfuscate: true\u003C\u002Fcode\u003E，產出來的 \u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E 內容如下：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F GENERATED CODE - DO NOT MODIFY BY HAND\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Epart\u003C\u002Fspan\u003E of \u003Cspan class=\"hljs-string\"\u003E&#x27;env.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F **************************************************************************\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F EnviedGenerator\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F **************************************************************************\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003E_Env\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E apiKey = \u003Cspan class=\"hljs-string\"\u003E&#x27;AIzaSyBeSYQ8cn6IIwRBbB4hPrn&#x27;\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E這樣 \u003Ccode\u003EapiKey\u003C\u002Fcode\u003E 會以明碼方式存在於 dart 檔案中。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003EStep 5. 將 \u003Ccode\u003E*.env*\u003C\u002Fcode\u003E 與 \u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E 加入 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E\u003C\u002Fh3\u003E\n\u003Cp\u003E這兩份檔案基本都有 key 的資訊，都需要加入 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E 內：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E# .gitignore\nenv.g.dart\n*.env*\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 6. 程式內使用 API keys\u003C\u002Fh3\u003E\n\u003Cp\u003E引入 \u003Ccode\u003Eenv.dart\u003C\u002Fcode\u003E 檔案，使用 \u003Ccode\u003EEnv.&lt;key-name&gt;\u003C\u002Fcode\u003E 取得 key 的值：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 引入 env.dart\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;package:flutter_appworks\u002Fenv.dart&#x27;\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-class\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title\"\u003ELocationService\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E{\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F use api key\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E key = Env.apiKey;\n\n  Future&lt;\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E&gt; getPlaceId(\u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E input) \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-keyword\"\u003Efinal\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E url =\n        \u003Cspan class=\"hljs-string\"\u003E&#x27;https:\u002F\u002Fmaps.googleapis.com\u002Fmaps\u002Fapi\u002Fplace\u002Ffindplacefromtext\u002Fjson?input=\u003Cspan class=\"hljs-subst\"\u003E$input\u003C\u002Fspan\u003E&amp;inputtype=textquery&amp;key=\u003Cspan class=\"hljs-subst\"\u003E$key\u003C\u002Fspan\u003E&#x27;\u003C\u002Fspan\u003E;\n\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E response = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E http.\u003Cspan class=\"hljs-keyword\"\u003Eget\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-built_in\"\u003EUri\u003C\u002Fspan\u003E.parse(url));\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E json = convert.jsonDecode(response.body);\n\n    \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E placeId = json[\u003Cspan class=\"hljs-string\"\u003E&#x27;candidates&#x27;\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-string\"\u003E&#x27;place_id&#x27;\u003C\u002Fspan\u003E] \u003Cspan class=\"hljs-keyword\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003EString\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E placeId;\n  }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003E補充：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ca  href=\"https:\u002F\u002Fpub.dev\u002Fpackages\u002Fenvied#usage\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Eenvied\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E v.s. \u003Ca  href=\"https:\u002F\u002Fpub.dev\u002Fpackages\u002Fflutter_dotenv\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Eflutter_dotenv\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E這兩個套件都可以用來處理 flutter 環境變數的需求，差別是使用 \u003Ccode\u003Eenv\u003C\u002Fcode\u003E 檔案的方式：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003E\u003Ccode\u003Eenvied\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E\ncode generation + 程式碼混淆功能，可以讓 API keys 更加安全\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003E\u003Ccode\u003Eflutter_dotenv\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003Cbr \u002F\u003E\n將 \u003Ccode\u003Eenv\u003C\u002Fcode\u003E 加入 assets 資料夾中，在 runtime 時候讀取，因此有機會可以從 APK 獲取 API keys\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E如果 \u003Ccode\u003Eenv\u003C\u002Fcode\u003E 沒放什麼重要的 key，那麼兩個套件都可以使用，反之，就直接選擇 \u003Ccode\u003Eenvied\u003C\u002Fcode\u003E 了。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003E優點\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E安全度高 (code obfuscation)\u003C\u002Fli\u003E\n\u003Cli\u003EAPI keys 集中管理\u003C\u002Fli\u003E\n\u003Cli\u003E可支持多個環境設定\n\u003Cblockquote\u003E\n\u003Cp\u003E尚未親測過，但根據該 \u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fpetercinibulk\u002Fenvied\u002Fissues\u002F16\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Eissue\u003C\u002Fa\u003E 討論，作者回應是可以做得到的。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E缺點\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E步驟比較繁複：增加環境變數時，class 要手動新增項目和重新產 \u003Ccode\u003Eenv.g.dart\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E因為筆者是寫前端，所以是跟 web 做比較，web 也是用 \u003Ccode\u003E.env\u003C\u002Fcode\u003E 管理環境變數，新增變數時，只要重新 run 專案，不需要再手動做什麼了。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"總結\" title=\"總結\"\u003E\u003Ca href=\"#總結\"\u003E總結\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E如果需要接第三方的 API，都會遇到如何在 client 去管理這些 API Key 的問題，基本只需要謹記這兩點，再依自己需求去做選擇即可：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E重要的 key 檔案，加入 \u003Ccode\u003E.gitignore\u003C\u002Fcode\u003E，不進版控\u003C\u002Fli\u003E\n\u003Cli\u003Erelease version 需要做程式碼混淆(code obfuscation)\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E另外有些套件是需要分別在 Android 和 iOS 的 \u003Ccode\u003EAndroidManifest.xml\u003C\u002Fcode\u003E、\u003Ccode\u003EAppDelegate.swift\u003C\u002Fcode\u003E 寫入 key 值，例如： \u003Ca  href=\"https:\u002F\u002Fcodelabs.developers.google.com\u002Fcodelabs\u002Fgoogle-maps-in-flutter#3\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGoogle Maps\u003C\u002Fa\u003E，這時候可以考慮選擇 \u003Ccode\u003E--dart-define\u003C\u002Fcode\u003E，支持只定義一次 key，就讓雙平台可以從設定檔中讀取到 key，可以參考這篇文章的做法 - \u003Ca  href=\"https:\u002F\u002Fmedium.com\u002Fflutter-community\u002Fhow-to-setup-dart-define-for-keys-and-secrets-on-android-and-ios-in-flutter-apps-4f28a10c4b6c\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EHow to setup dart-define for keys and secrets on Android and iOS in Flutter apps\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003Ch2 id=\"參考資料\" title=\"參考資料\"\u003E\u003Ca href=\"#參考資料\"\u003E參考資料\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fcodewithandrea.com\u002Farticles\u002Fflutter-api-keys-dart-define-env-files\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EHow to Store API Keys in Flutter: --dart-define vs .env files\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fdocs.flutter.dev\u002Fdeployment\u002Fobfuscate\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EObfuscating Dart code\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fwww.dotenv.org\u002Fdocs\u002Fsecurity\u002Fenv\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Edotenv doc\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n",toc:{title:b,subtitles:["前言","Hard-coding","–dart-define \u002F --dart-define-from-file",".env 檔案定義 key","總結","參考資料"]}}}}}(null,"[Note] Flutter 如何隱藏 API Key","2023-05-12T00:00:00.000Z"));