window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1734243485",layout:"default",error:a,serverRendered:true,routePath:"\u002Fdev\u002FTest\u002Fvitest-snapshot",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}},globalRefs:{},ssrRefs:{"articleMatter-Test-vitest-snapshot":{info:{title:b,fileName:"vitest-snapshot",description:"Snapshot 方法介紹",createdAt:c,updatedAt:c,tags:["Test","Vitest","mock","snapshot"]},content:"\u003Ch1 id=\"Vitest - Snapshot\" title=\"Vitest - Snapshot\"\u003EVitest - Snapshot\u003C\u002Fh1\u003E\n\u003Cp\u003E快照(Snapshot)是首次運行測試時，將輸出的結果保存，與第二次運行結果做匹配。兩次快照結果不匹配的話，即為測試失敗，如為預期修改造成的測試失敗，可以將快照版本更新。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E快照檔案\u003Cstrong\u003E需要進版控\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E自動比較前一份快照，不用手動維護 input \u002F output\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E@\u003Ca  href=\"https:\u002F\u002Fvitest.dev\u002Fguide\u002Fsnapshot.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVitest Snapshot Doc\u003C\u002Fa\u003E\u003Cbr \u002F\u003E\n@\u003Ca  href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=FDEf3iWEgFI\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EFast Unit Testing With Vitest\u003C\u002Fa\u003E - 19:40\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Ch2 id=\"預設快照 (Snapshot)\" title=\"預設快照 (Snapshot)\"\u003E\u003Ca href=\"#預設快照 (Snapshot)\"\u003E預設快照 (Snapshot)\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E使用 \u003Ccode\u003EtoMatchSnapshot\u003C\u002Fcode\u003E API，運行完，會自動產生一份獨立的快照檔案，存放在測試旁邊的 \u003Ccode\u003E__snapshots__\u003C\u002Fcode\u003E資料夾中。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-title function_\"\u003Edescribe\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;updateUserData(Snapshot)&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Etest\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;loads user data as expected&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E () =&gt; {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E user = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EupdateUserData\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;Jennie&quot;\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 會自動生成一個 .snap 檔案\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title function_\"\u003Eexpect\u003C\u002Fspan\u003E(user).\u003Cspan class=\"hljs-title function_\"\u003EtoMatchSnapshot\u003C\u002Fspan\u003E();\n  });\n});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E運行完：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fhackmd.io\u002F_uploads\u002FHJK8ll3Vyl.png\" alt=\"image\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"行內快照 (Inline Snapshot)\" title=\"行內快照 (Inline Snapshot)\"\u003E\u003Ca href=\"#行內快照 (Inline Snapshot)\"\u003E行內快照 (Inline Snapshot)\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E使用 \u003Ccode\u003EtoMatchInlineSnapshot\u003C\u002Fcode\u003E API，運行完，會測試檔案中自動生成快照。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-title function_\"\u003Edescribe\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;updateUserData(Inline Snapshot)&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Etest\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;loads user data as expected&quot;\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-keyword\"\u003Easync\u003C\u002Fspan\u003E () =&gt; {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E user = \u003Cspan class=\"hljs-keyword\"\u003Eawait\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EupdateUserData\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&quot;Jennie&quot;\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 會在此檔案中字自動生成快照\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title function_\"\u003Eexpect\u003C\u002Fspan\u003E(user).\u003Cspan class=\"hljs-title function_\"\u003EtoMatchInlineSnapshot\u003C\u002Fspan\u003E();\n  });\n});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E運行完：\u003C\u002Fp\u003E\n\u003Cp\u003E橘框部分為自動產生的快照。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fhackmd.io\u002F_uploads\u002FH1F_el2Nkx.png\" alt=\"image\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E相較於預設快照的優點就是\u003Cstrong\u003E在測試檔案中就能直接看到預期結果，不需要再另開啟 snapshot 檔案，減少跨檔案查看的時間\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003Ch2 id=\"更新快照\" title=\"更新快照\"\u003E\u003Ca href=\"#更新快照\"\u003E更新快照\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch3\u003E手動更新\u003C\u002Fh3\u003E\n\u003Cp\u003E在監聽模式下，可以在終端機按 \u003Ccode\u003Eu\u003C\u002Fcode\u003E 鍵手動更新快照\u003C\u002Fp\u003E\n\u003Ch3\u003E自動更新\u003C\u002Fh3\u003E\n\u003Cp\u003E改用下面指令，可以進入快照更新模式，任何修改都會觸發自動更新快照：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E# -u 和 -update 都可以，擇一即可\u003C\u002Fspan\u003E\nnpx vitest -u\nnpx vitest --update\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E自動更新在以下兩情境中很好用：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E當測試複雜邏輯的函式或組件時，只要修改傳入的參數，就能快速看到返回的結果\u003C\u002Fli\u003E\n\u003Cli\u003E在功能還在開發中，例如多加一個欄位，測試資料會自動補齊\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"參考資料\" title=\"參考資料\"\u003E\u003Ca href=\"#參考資料\"\u003E參考資料\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fvite.dev\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVitest\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=FDEf3iWEgFI\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EFast Unit Testing With Vitest\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n",toc:{title:b,subtitles:["預設快照 (Snapshot)","行內快照 (Inline Snapshot)","更新快照","參考資料"]},wordCount:288}}}}(null,"Vitest - Snapshot","2024-12-15T00:00:00.000Z"));