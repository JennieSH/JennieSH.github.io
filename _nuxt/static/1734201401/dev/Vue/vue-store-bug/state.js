window.__NUXT__=(function(a,b){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1734201401",layout:"default",error:a,serverRendered:true,routePath:"\u002Fdev\u002FVue\u002Fvue-store-bug",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}},globalRefs:{},ssrRefs:{"articleMatter-Vue-vue-store-bug":{info:{title:"[Debug] Vue 生命週期的坑",fileName:"vue-store-bug",description:"Vue 在註冊 Store 時，因為 lifecycle 踩到的坑！",createdAt:b,updatedAt:b,tags:["Vue","store","lifecycle"]},content:"\u003Ch6\u003Etags: \u003Ccode\u003EVue\u003C\u002Fcode\u003E、\u003Ccode\u003Estore\u003C\u002Fcode\u003E、\u003Ccode\u003Elifecycle\u003C\u002Fcode\u003E\u003C\u002Fh6\u003E\n\u003Ch1 id=\"[Debug] Vue 生命週期的坑 - 註冊 Store\" title=\"[Debug] Vue 生命週期的坑 - 註冊 Store\"\u003E[Debug] Vue 生命週期的坑 - 註冊 Store\u003C\u002Fh1\u003E\n\u003Ch2 id=\"註冊 Store 機制遇到 bug\" title=\"註冊 Store 機制遇到 bug\"\u003E\u003Ca href=\"#註冊 Store 機制遇到 bug\"\u003E註冊 Store 機制遇到 bug\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch3\u003E已知條件\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E、\u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 兩路徑共用同一組件 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 在 \u003Ccode\u003Esetup\u003C\u002Fcode\u003E 時註冊 store，在 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 移除該註冊 store\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F router\u002Findex.js\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E routes = [\n  {\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fzh&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-attr\"\u003Erender\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Ec\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Ec\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;router-view&#x27;\u003C\u002Fspan\u003E) },\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F path : \u002Fzh\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Echildren\u003C\u002Fspan\u003E: [{\n      \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Index&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EIndex\u003C\u002Fspan\u003E\n    }]\n  },\n  {\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fen&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-attr\"\u003Erender\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Ec\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Ec\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;router-view&#x27;\u003C\u002Fspan\u003E) },\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F path : \u002Fen\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Echildren\u003C\u002Fspan\u003E: [{\n      \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Index&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EIndex\u003C\u002Fspan\u003E\n    }]\n  },\n  {\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;*&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eredirect\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fzh&#x27;\u003C\u002Fspan\u003E\n  }\n]\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Index.vue\u003C\u002Fspan\u003E\nsetup (props, context) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { $store, $registerModule, $unregisterModule } = context.\u003Cspan class=\"hljs-property\"\u003Eroot\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F setup 註冊 store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;setup - registerModule&#x27;\u003C\u002Fspan\u003E)\n    $registerModule($store, { \u003Cspan class=\"hljs-attr\"\u003Eindex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EStoreModule\u003C\u002Fspan\u003E })\n\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;setup - get count from index store&#x27;\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E count = \u003Cspan class=\"hljs-title function_\"\u003Ecomputed\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E $store.\u003Cspan class=\"hljs-property\"\u003Estate\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Eindex\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ecount\u003C\u002Fspan\u003E)\n\n    \u003Cspan class=\"hljs-title function_\"\u003EonMounted\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;onMounted&#x27;\u003C\u002Fspan\u003E) })\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F onBeforeUnmount 移除註冊 store\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title function_\"\u003EonBeforeUnmount\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;onBeforeUnmount - unregisterModule&#x27;\u003C\u002Fspan\u003E)\n      $unregisterModule($store, [\u003Cspan class=\"hljs-string\"\u003E&#x27;index&#x27;\u003C\u002Fspan\u003E])\n    })\n\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      count\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003ERuntime Error\u003C\u002Fh3\u003E\n\u003Cp\u003E當 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 經由 router push 到 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E，\u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 由 \u003Ccode\u003Estore\u003C\u002Fcode\u003E 取出的 \u003Ccode\u003Ecount\u003C\u002Fcode\u003E 會得到 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FEaWvryy.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E原因\u003C\u002Fh3\u003E\n\u003Cp\u003E由印出來的結果看到， \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 在 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 移除註冊的 store，順序比 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 的 \u003Ccode\u003Esetup\u003C\u002Fcode\u003E 來得慢，因為兩者個路徑是共用 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 的 store，當 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 觸發移除 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 的 store，\u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 在 Mount 時會拿不到 store 中 count 的值，就報錯了。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002Fdz4sVYj.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E補充：\u003Cbr \u002F\u003E\nOptions API 一樣會有錯誤。\u003Cbr \u002F\u003E\n\u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 在 \u003Ccode\u003EbeforeCreate\u003C\u002Fcode\u003E 時註冊 store，在 \u003Ccode\u003EbeforeDestroy\u003C\u002Fcode\u003E 移除該註冊 store。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002F1uzRntT.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E補充：\u003Cbr \u002F\u003E\n在上面圖中，第二次的 \u003Ccode\u003Esetup - wonder to registerModule\u003C\u002Fcode\u003E 並未再重新註冊，因為在程式內有檢查，有註冊的話就不在重新註冊，會共用先前註冊的同名 store，在各時機點加更精確的描述，圖如下。\u003Cbr \u002F\u003E\n\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FDjUb6dV.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E補充：\u003Cbr \u002F\u003E\n\u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 使用的是 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 組件，\u003Ccode\u003E\u002Fzh\u002Fcat\u003C\u002Fcode\u003E 使用的是 \u003Ccode\u003ECat.vue\u003C\u002Fcode\u003E，雖然 \u003Ccode\u003E\u002Fzh\u002Fcat\u003C\u002Fcode\u003E setup 晚於 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 的\u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E，但兩個路徑\u003Cstrong\u003E不共用同一個 store\u003C\u002Fstrong\u003E，基本上就跟平常用法一樣，不受影響。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FOITqBiQ.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003E小結論\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E應該可以排除註冊 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E 機制的問題，由結果可知是 \u003Cstrong\u003EVue Lifecycle Hooks\u003C\u002Fstrong\u003E 問題比較大。但這錯誤情境目前只遇到發生在建立\u003Cstrong\u003E明確的不同路徑\u003C\u002Fstrong\u003E (即上面 \u003Ccode\u003Erouter\u002Findex\u003C\u002Fcode\u003E 那樣的寫法)，使用同一個組件，並\u003Cstrong\u003E換路徑時試圖移除前一個同名 store 再註冊一個新的同名 store\u003C\u002Fstrong\u003E 時會遇到 。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E本來看到最後 \u003Ccode\u003EonMounted\u003C\u002Fcode\u003E 會比上面的 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 還晚發生，所以想把 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E 改成放在 \u003Ccode\u003EMounted\u003C\u002Fcode\u003E 階段，但後來想，這樣在第一次 \u003Ccode\u003Esetup\u003C\u002Fcode\u003E 裡面的變數如果是需從 store 取得，也一樣會報錯，此法不通 ❎。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch3\u003E解法\u003C\u002Fh3\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E情境: 不同路徑共用同一個組件註冊的 store，且可直接互相跳轉路徑\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cs\u003E* 解法一： \u003Cstrong\u003E\u003Ccode\u003EbeforeRouteLeave\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E - 適用情境為，不同路徑\u003Cstrong\u003E不想要共享 store 內資料\u003C\u002Fstrong\u003E - 在組件內直接調用 \u003Ccode\u003EbeforeRouteLeave\u003C\u002Fcode\u003E，在此階段 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E，強制取消註冊的 store\u003C\u002Fs\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\n\u003Cp\u003E解法二：\u003Cstrong\u003E動態命名 store\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E適用情境為，不同路徑\u003Cstrong\u003E不想要共享 store 內資料\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E對每個路徑，客製化命名 store（e.g. \u003Ccode\u003Ezh-index\u003C\u002Fcode\u003E），雖共用同組件，但每個路徑的 store 都為獨立的\u003C\u002Fli\u003E\n\u003Cli\u003E缺點為暫時性會有兩個 store 同時存在，要額外多寫一點程式碼。\n\u003Cblockquote\u003E\n\u003Cp\u003E還有命名問題，為每個 store 客製化名字同時，也要思考如果別的 component 取該 store 資料時，如何知道目標的 store 名字。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E解法三：\u003Cstrong\u003E動態路由\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E適用情境為，不同路徑\u003Cstrong\u003E想要共享 store 內資料\u003C\u002Fstrong\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E優點是\u003Cstrong\u003E擴充性加\u003C\u002Fstrong\u003E，以後有更多路徑需求也不需要手動新增 (e.g. \u003Ccode\u003E\u002Fjp\u003C\u002Fcode\u003E)，也解決原 registerModule 在 Vue 中遇到生命週期的問題。\u003C\u002Fli\u003E\n\u003Cli\u003E可透過 \u003Ccode\u003Econtext.root.$route.params\u003C\u002Fcode\u003E 拿到網址中的 params\u003Cbr \u002F\u003E\n\u003Cbr\u002F\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E原來的\u003Cstrong\u003E組件實例會被複用\u003C\u002Fstrong\u003E。因為兩個路由都渲染同個組件，比起銷毀再創建，\u003Cstrong\u003E複用則顯得更加高效\u003C\u002Fstrong\u003E。不過，這也意味著組件的生命週期鉤子不會再被調用。 -\u003Ca  href=\"https:\u002F\u002Frouter.vuejs.org\u002Fzh\u002Fguide\u002Fessentials\u002Fdynamic-matching.html#%E5%93%8D%E5%BA%94%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%98%E5%8C%96\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVue.js 官方 - 響應路由參數的變化\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E解法四：\u003Cstrong\u003E先反註冊，再註冊\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003E適用\u003C\u002Fstrong\u003E以上\u003Cstrong\u003E兩種情境\u003C\u002Fstrong\u003E，即想共享或不想共享 store 內的資料皆可\u003C\u002Fli\u003E\n\u003Cli\u003E註冊 store、移除 store 時，都要接收一個參數(e.g. \u003Ccode\u003Euuid\u003C\u002Fcode\u003E)來檢查。不同路徑在註冊階段會針對先前已註冊的同名 store 先移除，再註冊。（翻譯：限制組件只能 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E 自己 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E 的 store）\u003C\u002Fli\u003E\n\u003Cli\u003E缺點是每次使用時要多傳入可識別的 id 和多一個地方存每個 store 的名字\n\u003Cblockquote\u003E\n\u003Cp\u003E原本打算使用 Vue Component 的 uid，但\u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fvuejs\u002Fvue\u002Fissues\u002F5886\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E官方不推薦使用\u003C\u002Fa\u003E，如真要採用，可以用\u003Ca  href=\"https:\u002F\u002Fwww.npmjs.com\u002Fpackage\u002Fuuidv4\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E套件\u003C\u002Fa\u003E或自己實作 uuid。\u003C\u002Fp\u003E\n\u003Cp\u003EThe vm _uid is reserved for internal use and it’s important to keep it private (and not rely on it in user code) so that we keep the flexibility to change its behavior for potential future use cases.\u003C\u002Fp\u003E\n\u003Cp\u003EFor userland use cases, I’d suggest generating UIDs yourself - you can write a simple module\u002Fservice that generates uids and import it into your components, or, if you want it for every component, make it a (global) mixin. - Evan You\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cul\u003E\n\u003Cli\u003E無法滿足頁面會同時存在兩個會註冊同 store 名的相同組件情境\n\u003Cblockquote\u003E\n\u003Cp\u003Ee.g. 兩個相同組件 (Index.vue) 同時都會註冊名為 index 的 store，永遠都只保留最後一個組件註冊的。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch2 id=\"\u003Cs\u003EbeforeRouteLeave\u003C\u002Fs\u003E (有坑，暫不考慮，除非防呆寫得好，可以一試)\" title=\"\u003Cs\u003EbeforeRouteLeave\u003C\u002Fs\u003E (有坑，暫不考慮，除非防呆寫得好，可以一試)\"\u003E\u003Ca href=\"#\u003Cs\u003EbeforeRouteLeave\u003C\u002Fs\u003E (有坑，暫不考慮，除非防呆寫得好，可以一試)\"\u003E\u003Cs\u003EbeforeRouteLeave\u003C\u002Fs\u003E (有坑，暫不考慮，除非防呆寫得好，可以一試)\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E只需在組件內原本在 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 做的 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E，改由在 \u003Ccode\u003EbeforeRouteLeave\u003C\u002Fcode\u003E 時執行。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Index.vue\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EdefineComponent\u003C\u002Fspan\u003E({\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Index&#x27;\u003C\u002Fspan\u003E,\n  setup (props, context) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { $store, $registerModule } = context.\u003Cspan class=\"hljs-property\"\u003Eroot\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;setup - wonder to registerModule&#x27;\u003C\u002Fspan\u003E)\n    $registerModule($store, { \u003Cspan class=\"hljs-attr\"\u003Eindex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EStoreModule\u003C\u002Fspan\u003E })\n\n    ...\n  },\n  beforeRouteLeave (to, \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E, next) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;index beforeRouterLeave.&#x27;\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;beforeRouteLeave - unregisterModule&#x27;\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.$unregisterModule(\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003E$store\u003C\u002Fspan\u003E, [\u003Cspan class=\"hljs-string\"\u003E&#x27;index&#x27;\u003C\u002Fspan\u003E])\n    \u003Cspan class=\"hljs-title function_\"\u003Enext\u003C\u002Fspan\u003E()\n  }\n})\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002F4IB4evz.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E棄用原因\u003C\u002Fh3\u003E\n\u003Cp\u003E雖然看似美好，在 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E setup 前就先 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E，但實際 runtime 一樣會報錯。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FpxuzG6G.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E原因是因為在 \u003Ccode\u003EbeforeRouteLeave\u003C\u002Fcode\u003E 時移除了共有的 index store，但 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 的 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 組件被卸載的時間點晚於 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E 時間點，由於 count 剛好依賴 store 內的資料且組件尚未移除，此時 store 被拔除，直接報錯。\u003C\u002Fp\u003E\n\u003Ch2 id=\"動態命名 store\" title=\"動態命名 store\"\u003E\u003Ca href=\"#動態命名 store\"\u003E動態命名 store\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E在 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E，依據路徑不同，給予不同 store 名，視同各自擁有自己獨立的 store，\u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 移除註銷 store 就不影響 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Esetup (props, context) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E { $store, $router, $registerModule, $unregisterModule } = context.\u003Cspan class=\"hljs-property\"\u003Eroot\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E currentRouteParams = $router.\u003Cspan class=\"hljs-property\"\u003EcurrentRoute\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Epath\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;\u002F&#x27;\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E lang = \u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${currentRouteParams}\u003C\u002Fspan\u003E-index`\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;setup - wonder to registerModule&#x27;\u003C\u002Fspan\u003E)\n    $registerModule($store, { [lang]: \u003Cspan class=\"hljs-title class_\"\u003EStoreModule\u003C\u002Fspan\u003E })\n\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;setup - get count from index store&#x27;\u003C\u002Fspan\u003E)\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E count = \u003Cspan class=\"hljs-title function_\"\u003Ecomputed\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E $store.\u003Cspan class=\"hljs-property\"\u003Estate\u003C\u002Fspan\u003E[lang].\u003Cspan class=\"hljs-property\"\u003Ecount\u003C\u002Fspan\u003E)\n\n    \u003Cspan class=\"hljs-title function_\"\u003EonMounted\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;onMounted&#x27;\u003C\u002Fspan\u003E) })\n\n    \u003Cspan class=\"hljs-title function_\"\u003EonBeforeUnmount\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =&gt;\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;index - onBeforeUnmount&#x27;\u003C\u002Fspan\u003E)\n      $unregisterModule($store, [lang])\n    })\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E {\n      count\n    }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FZeh668U.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E可用 Vue DevTools 更清楚看到順序和 store 的名字。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FnOaiUYk.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"動態路由\" title=\"動態路由\"\u003E\u003Ca href=\"#動態路由\"\u003E動態路由\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E只需要修改 \u003Ccode\u003Erouter\u002Findex.js\u003C\u002Fcode\u003E 中 \u003Ccode\u003Eroutes\u003C\u002Fcode\u003E 設定：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E routes = [\n  {\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002F:lang&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-attr\"\u003Erender\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Ec\u003C\u002Fspan\u003E =&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Ec\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E&#x27;router-view&#x27;\u003C\u002Fspan\u003E) },\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F path - \u002F:lang\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Echildren\u003C\u002Fspan\u003E: [{\n      \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;Index&#x27;\u003C\u002Fspan\u003E,\n      \u003Cspan class=\"hljs-attr\"\u003Ecomponent\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EIndex\u003C\u002Fspan\u003E\n    }]\n  },\n  {\n    \u003Cspan class=\"hljs-attr\"\u003Epath\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;*&#x27;\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eredirect\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E&#x27;\u002Fzh&#x27;\u003C\u002Fspan\u003E\n  }\n]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u002F\u002F 如果還有子路徑可以設置如下：\nconst routes = [\n  {\n    path: '\u002F:lang',\n    component: { render: c =&gt; c('router-view') },\n    \u002F\u002F path : \u002F:lang\n    children: [{\n      path: '',\n      name: 'Index',\n      component: Index\n    },\n    \u002F\u002F path : \u002F:lang\u002Fcat\n    {\n      path: 'cat',\n      name: 'Cat',\n      component: () =&gt;\n        import(\u002F* webpackChunkName: &quot;cat&quot; *\u002F '..\u002Fcontainers\u002FCat\u002Findex.vue')\n    }]\n  },\n  {\n    path: '*',\n    redirect: '\u002Fzh'\n  }\n]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E再看一下當路徑切換時，\u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 的活動：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E路徑在切換（\u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E -&gt; \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E）時只做 router push 動作\u003C\u002Fli\u003E\n\u003Cli\u003E此階段不會移除 store，兩個路徑一樣共用同 store\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002Fv3lHuBT.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E只有進入到不同組件時，\u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 才會被 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 頁面組件為 \u003Ccode\u003E&lt;Index&gt;\u003C\u002Fcode\u003E，\u003Ccode\u003E\u002Fen\u002Fcat\u003C\u002Fcode\u003E 頁面組件為 \u003Ccode\u003E&lt;Cat&gt;\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002F0U71jt2.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"先反註冊，再註冊\" title=\"先反註冊，再註冊\"\u003E\u003Ca href=\"#先反註冊，再註冊\"\u003E先反註冊，再註冊\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E由印出來的步驟可發現，原本方法和反註冊方法，走的流程都是一模一樣的，\u003Cstrong\u003E在 \u003Ccode\u003EIndex.vue\u003C\u002Fcode\u003E 使用方法也一樣\u003C\u002Fstrong\u003E，在 \u003Ccode\u003Esetup\u003C\u002Fcode\u003E 時註冊 store，在 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 移除該 store，但很明顯，原來的方法，會 runtime error，。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FOc9n512.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E用 Vue DevTools 可以更清楚看出差異處，原本 \u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E 是由 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 執行，改成 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 在 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E 前執行掉了，這樣就不存在 \u003Ccode\u003E\u002Fen\u003C\u002Fcode\u003E 會使用到的 store，因生命週期的不如預期而造成 \u003Ccode\u003E\u002Fzh\u003C\u002Fcode\u003E 在 \u003Ccode\u003EonBeforeUnmount\u003C\u002Fcode\u003E 將之誤移除情境。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FXGco5ot.png\" alt=\"\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E作法\u003C\u002Fh3\u003E\n\u003Ch4\u003E1. \u003Ccode\u003Estore name\u003C\u002Fcode\u003E-\u003Ccode\u003Ecomponent uid\u003C\u002Fcode\u003E Map\u003C\u002Fh4\u003E\n\u003Cp\u003E在全域會建立一個 \u003Ccode\u003Estore name\u003C\u002Fcode\u003E 和 \u003Ccode\u003Ecomponent uid\u003C\u002Fcode\u003E 的 \u003Ccode\u003EcurrentStoreNameMap\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch4\u003E2. registerModule\u003C\u002Fh4\u003E\n\u003Cp\u003E每次呼叫 \u003Ccode\u003EregisterModule\u003C\u002Fcode\u003E 方法時，會先去取得當前呼叫這方法的 component 中的\u003Ccode\u003Euid\u003C\u002Fcode\u003E，再檢查該 \u003Ccode\u003Estore name\u003C\u002Fcode\u003E 是否存在在 \u003Ccode\u003EcurrentStoreNameMap\u003C\u002Fcode\u003E 中，\u003Cstrong\u003E如果存在，先卸除該 store\u003C\u002Fstrong\u003E，再建立一個新 store，接著把 \u003Ccode\u003Estore name\u003C\u002Fcode\u003E 和呼叫的 \u003Ccode\u003Ecomponent uid\u003C\u002Fcode\u003E 存回 \u003Ccode\u003EcurrentStoreNameMap\u003C\u002Fcode\u003E 。\u003C\u002Fp\u003E\n\u003Ch4\u003E3. unregisterModule\u003C\u002Fh4\u003E\n\u003Cp\u003E在真正卸載 store 前，會先拿當前呼叫這方法(\u003Ccode\u003EunregisterModule\u003C\u002Fcode\u003E)的 component 中的\u003Ccode\u003Euid\u003C\u002Fcode\u003E，與 \u003Ccode\u003EcurrentStoreNameMap\u003C\u002Fcode\u003E 對應 \u003Ccode\u003Estore name\u003C\u002Fcode\u003E 的 \u003Ccode\u003Euid\u003C\u002Fcode\u003E 做比較，如果為同一個 \u003Ccode\u003Euid\u003C\u002Fcode\u003E 且存在的 store 就執行卸除，即\u003Cstrong\u003E確保預移除的 store name 跟呼叫 unregisterModule 是必須是相同一個組件\u003C\u002Fstrong\u003E，就不發生 Page A 誤移除到 Page B 中的同名 store。\u003C\u002Fp\u003E\n\u003Ch2 id=\"參考資料\" title=\"參考資料\"\u003E\u003Ca href=\"#參考資料\"\u003E參考資料\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fiter01.com\u002F467302.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVue3.x 生命週期 和 Composition API 核心語法理解\u003C\u002Fa\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E詳細比較 Vue3 和 Vue2 + Composition API Lifecycle Hooks 順序，如混用需注意順序，結論是不要混用。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fvuex.vuejs.org\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVuex 官網\u003C\u002Fa\u003E、\u003Ca  href=\"https:\u002F\u002Frouter.vuejs.org\u002Fzh\u002Fapi\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVue Router 官網\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fmedium.com\u002F@fabien705cccc\u002Fvue-%E7%9A%84%E7%94%9F%E5%91%BD%E9%80%B1%E6%9C%9F-lifecycle-3522c481e63f\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVue 的生命週期(Lifecycle)\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fithelp.ithome.com.tw\u002Farticles\u002F10214921\" target=\"_blank\" rel=\"noreferrer noopener\"\u003ERouter 與生命週期\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fjuejin.cn\u002Fpost\u002F6844903635873185806\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVuex 模块动态注册的一些实践经验\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Ft.codebug.vip\u002Fquestions-33383.htm\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EVuejs：如何為每个元件例項設置唯一 ID？\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n",toc:{title:"[Debug] Vue 生命週期的坑 - 註冊 Store",subtitles:["註冊 Store 機制遇到 bug","beforeRouteLeave (有坑，暫不考慮，除非防呆寫得好，可以一試)","動態命名 store","動態路由","先反註冊，再註冊","參考資料"]},wordCount:1734}}}}(null,"2024-12-15T00:00:00.000Z"));