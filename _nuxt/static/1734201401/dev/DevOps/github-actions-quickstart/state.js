window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1734201401",layout:"default",error:a,serverRendered:true,routePath:"\u002Fdev\u002FDevOps\u002Fgithub-actions-quickstart",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}},globalRefs:{},ssrRefs:{"articleMatter-DevOps-github-actions-quickstart":{info:{title:b,fileName:"github-actions-quickstart",description:"能躺著就不要坐著，能坐著就不要站著，能一個指令解決的，就不要用兩個！利用 GitHub Actions 打造專案的 CI\u002FCD。",createdAt:c,updatedAt:c,tags:["GitHub","GitHub Action","GitHub Page","CI\u002FCD","DevOps"]},content:"\u003Ch1 id=\"GitHub Actions - Creating My First Workflow (CI\u002FCD)\" title=\"GitHub Actions - Creating My First Workflow (CI\u002FCD)\"\u003EGitHub Actions - Creating My First Workflow (CI\u002FCD)\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ccode\u003ECI\u002FCD\u003C\u002Fcode\u003E 幾乎是公司每個專案的標配了，但因為都是初期就要設定完成，所以基本上接手的專案都已經有設定檔，沒什麼機會自己寫，藉由這次架部落格的機會，練習使用 \u003Ccode\u003EGitHub Action\u003C\u002Fcode\u003E，為自己的專案設定自動化流程。\u003C\u002Fp\u003E\n\u003Cp\u003E條列出這次想透過 \u003Ccode\u003EGitHub Action\u003C\u002Fcode\u003E 解決的需求，文章中會紀錄如何寫出對應的 Workflow 設定檔。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E流程主要需求：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Egit push\u003C\u002Fcode\u003E 到主分支時自動測試\u003C\u002Fli\u003E\n\u003Cli\u003E測試成功時，產生靜態檔案\u003C\u002Fli\u003E\n\u003Cli\u003E使用靜態檔案自動部署 \u003Ccode\u003EGitHub Page\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002Fueoi8QH.png\" alt=\"Github Actions flow\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch2 id=\"What is CI\u002FCD ?\" title=\"What is CI\u002FCD ?\"\u003E\u003Ca href=\"#What is CI\u002FCD ?\"\u003EWhat is CI\u002FCD ?\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003ECI\u002FCD\u003C\u002Fcode\u003E 分別代表持續整合 (\u003Ccode\u003EContinuous Integration\u003C\u002Fcode\u003E) 和持續部署 (\u003Ccode\u003EContinuous Deployment\u003C\u002Fcode\u003E)，簡單來說就是將程式的流程自動化，可以降低人員操作疏失的風險和減少手動操作的重複步驟，常見有 \u003Ca  href=\"https:\u002F\u002Ftravis-ci.org\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Ccode\u003ETravis CI\u003C\u002Fcode\u003E\u003C\u002Fa\u003E、\u003Ca  href=\"https:\u002F\u002Fwww.jenkins.io\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Ccode\u003EJenkins\u003C\u002Fcode\u003E\u003C\u002Fa\u003E、\u003Ca  href=\"https:\u002F\u002Faws.amazon.com\u002Fcodepipeline\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Ccode\u003EAWS CodePipeline\u003C\u002Fcode\u003E\u003C\u002Fa\u003E 等。\u003C\u002Fp\u003E\n\u003Ch3\u003E- 持續整合 (\u003Ccode\u003EContinuous Integration\u003C\u002Fcode\u003E)\u003C\u002Fh3\u003E\n\u003Cp\u003E當程式被合併到分支時，會開始自動化 \u003Ccode\u003Ebuild\u003C\u002Fcode\u003E、自動化測試，確保此次提交的程式異動都有通過測試，也可以指定環境版本，避免不同電腦的開發環境不同，而造成功能異常。\u003C\u002Fp\u003E\n\u003Ch3\u003E- 持續部署 (\u003Ccode\u003EContinuous Deployment\u003C\u002Fcode\u003E)\u003C\u002Fh3\u003E\n\u003Cp\u003E在 CI 流程過後，只要不失敗，程式碼屬於可被部署的狀態，接著就會自動化執行部署的動作。\u003C\u002Fp\u003E\n\u003Ch2 id=\"What is Github Actions ?\" title=\"What is Github Actions ?\"\u003E\u003Ca href=\"#What is Github Actions ?\"\u003EWhat is Github Actions ?\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E透過在 \u003Ccode\u003Erepository\u003C\u002Fcode\u003E 內配置檔案，能夠彈性客製各種自動化的工作流程，當然也包括 \u003Ccode\u003ECI\u002FCD\u003C\u002Fcode\u003E，而且在 \u003Ccode\u003EGitHub\u003C\u002Fcode\u003E 內就可以看到即時的自動化結果和報告，不需要透過第三方工具。\u003C\u002Fp\u003E\n\u003Ch2 id=\"如何添加設定檔？\" title=\"如何添加設定檔？\"\u003E\u003Ca href=\"#如何添加設定檔？\"\u003E如何添加設定檔？\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ccode\u003EGithub Actions\u003C\u002Fcode\u003E 設定文件會放在根目錄的 \u003Ccode\u003E.github\u002Fworkflows\u003C\u002Fcode\u003E 下，檔名可自取，內容需要以 YAML 語法來撰寫，可以有一個以上的 \u003Ccode\u003Eworkflow\u003C\u002Fcode\u003E 設定檔。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E── .github\n    └── workflows\n        ├── cicd.yml\n        └── slack-notification.yml\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"基本概念\" title=\"基本概念\"\u003E\u003Ca href=\"#基本概念\"\u003E基本概念\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E設定檔使用到的 \u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E、\u003Ccode\u003EJob\u003C\u002Fcode\u003E、\u003Ccode\u003EStep\u003C\u002Fcode\u003E、\u003Ccode\u003EAction\u003C\u002Fcode\u003E，是存在從屬關係的，需要先稍微理解這塊。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FdqGfdz7.png\" alt=\"Github Actions Elements\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Ch3\u003E- Workflow (工作流程)\u003C\u002Fh3\u003E\n\u003Cp\u003E指一個完整的自動化過程，會涵蓋一個以上的 \u003Ccode\u003EJob\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cstrong\u003E\u003Ccode\u003Ename\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E (optional)： 在 \u003Ccode\u003EActions\u003C\u002Fcode\u003E 的 \u003Ccode\u003EWorkflows\u003C\u002Fcode\u003E 下，會顯示設定的 \u003Ccode\u003EWorkflow name\u003C\u002Fcode\u003E，預設為檔名\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Cstrong\u003E\u003Ccode\u003Eon\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E ：指定特定的 \u003Ccode\u003Eevent\u003C\u002Fcode\u003E 來觸發 \u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FxvEJKHI.png\" alt=\"Workflow-name\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-attr\"\u003Eon:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E# 在對 main branch 發 PR 或 git push 時，會觸發 workflow\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epush:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ebranches:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Emain\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epull_request:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ebranches:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Emain\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-comment\"\u003E# 每天在 5:30 和 17:30 UTC，會觸發 workflow\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eschedule:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ecron:\u003C\u002Fspan\u003E  \u003Cspan class=\"hljs-string\"\u003E&#x27;30 5,17 * * *&#x27;\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-comment\"\u003E# git push 至啟用的 GitHub Pages 的分支（page_build 事件)，會觸發 workflow\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epage_build:\u003C\u002Fspan\u003E\n\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E🔗 \u003Cstrong\u003E補充\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E更多 \u003Ccode\u003Eevents\u003C\u002Fcode\u003E 可以參考 \u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Flearn-github-actions\u002Fevents-that-trigger-workflows\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EEvents that trigger workflows\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Cdiv class=\"warning\"\u003E\n\u003Cp\u003E❗ \u003Cstrong\u003E注意\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E 設定檔案 (\u003Ccode\u003E.yml\u003C\u002Fcode\u003E) 需要存在於 \u003Ccode\u003Edefault branch\u003C\u002Fcode\u003E，才會觸發整個自動化流程。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch3\u003E- Job（工作項目 \u002F 任務）\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E 可以包括一個或多個 \u003Ccode\u003EJob\u003C\u002Fcode\u003E，\u003Ccode\u003EJob\u003C\u002Fcode\u003E 預設是\u003Cstrong\u003E同時\u003C\u002Fstrong\u003E執行。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Flearn-github-actions\u002Fworkflow-syntax-for-github-actions#jobsjob_idruns-on\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Eruns-on\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E：指定運行的虛擬機環境 (\u003Ccode\u003ERunners\u003C\u002Fcode\u003E)\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Flearn-github-actions\u002Fworkflow-syntax-for-github-actions#jobsjob_idneeds\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Eneeds\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E : 用於設定有依賴項的 \u003Ccode\u003EJob\u003C\u002Fcode\u003E，如果某個 \u003Ccode\u003EJob\u003C\u002Fcode\u003E 作業失敗，則所有需要它的 \u003Ccode\u003EJob\u003C\u002Fcode\u003E 都會被跳過，除非設置\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fcn\u002Factions\u002Flearn-github-actions\u002Fexpressions#job-status-check-functions\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E條件表達式\u003C\u002Fa\u003E。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E# 要求按照順序且相關 Job 要執行成功\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E# 執行順序： job1 =&gt; job2 =&gt; job3\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob1:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob2:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eneeds:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ejob1\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob3:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eneeds:\u003C\u002Fspan\u003E [\u003Cspan class=\"hljs-string\"\u003Ejob1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003Ejob2\u003C\u002Fspan\u003E]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E# 只要求按照順序\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E# job3 使用 always() 條件表達式，因此他始終在 job1 和 job2 完成後執行，但不管它們是否成功。\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob1:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob2:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eneeds:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ejob1\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ejob3:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eif:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E${{\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ealways()\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E}}\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eneeds:\u003C\u002Fspan\u003E [\u003Cspan class=\"hljs-string\"\u003Ejob1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003Ejob2\u003C\u002Fspan\u003E]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003E- Step（步驟）\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ccode\u003EJob\u003C\u002Fcode\u003E 可以包括一個以上的 \u003Ccode\u003EStep\u003C\u002Fcode\u003E，步驟會\u003Cstrong\u003E依序執行\u003C\u002Fstrong\u003E，只要其中一個步驟失敗，後面步驟皆不會被執行。\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca  href=\"\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Erun\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E：用於在虛擬機使用 \u003Ccode\u003Eshell comman\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Cstrong\u003E\u003Ccode\u003Euses\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E\u003C\u002Fa\u003E：用於使用別人寫好的 \u003Ccode\u003EAction\u003C\u002Fcode\u003E 檔案\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E\u003Ccode\u003EStep\u003C\u002Fcode\u003E 因為處於同一個虛擬機環境，所以在同一個 \u003Ccode\u003EJob\u003C\u002Fcode\u003E 下的步驟，彼此可以共享 data。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E# job name\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Egithub-action-example:\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E# job 運行的虛擬機\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eruns-on:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eubuntu-latest\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-attr\"\u003Esteps:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-comment\"\u003E# 使用別人寫好的 action - actions\u002Fcheckout@v2\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fcheckout@v2\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-comment\"\u003E# 設定 node 環境並指定版本\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fsetup-node@v2\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Ewith:\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Enode-version:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;14&#x27;\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-comment\"\u003E# 執行指令\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Enpm\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Einstall\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003E- Action (動作)\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ccode\u003EStep\u003C\u002Fcode\u003E 可以依序執行一個以上的 \u003Ccode\u003EAction\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Eworkflow-command-job:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eruns-on:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eubuntu-latest\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Esteps:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Edisable\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eworkflow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ecommands\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E|\n          echo &#x27;::warning:: this is a warning&#x27;\n          echo &quot;::stop-commands::`echo -n ${{ github.token }} | sha256sum | head -c 64`&quot;\n          echo &#x27;::warning:: this will NOT be a warning&#x27;\n          echo &quot;::`echo -n ${{ github.token }} | sha256sum | head -c 64`::&quot;\n          echo &#x27;::warning:: this is a warning again&#x27;\n\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 \u003Cstrong\u003E補充\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003EGitHub 有提供 \u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Emarketplace\u003C\u002Fa\u003E，裡面存放了許多別人寫好的 \u003Ccode\u003EAction\u003C\u002Fcode\u003E，相當於 \u003Ccode\u003EAction\u003C\u002Fcode\u003E 版的 \u003Ccode\u003EGitHub\u003C\u002Fcode\u003E，把一些常用的步驟指令都打包好了，可以直接 \u003Ccode\u003Euses\u003C\u002Fcode\u003E 做使用。\u003C\u002Fp\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"實作\" title=\"實作\"\u003E\u003Ca href=\"#實作\"\u003E實作\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E再回憶一下這次自動化想包含的需求：\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Egit push\u003C\u002Fcode\u003E 到主分支時自動測試\u003C\u002Fli\u003E\n\u003Cli\u003E測試成功時，產生靜態檔案\u003C\u002Fli\u003E\n\u003Cli\u003E使用靜態檔案自動部署 \u003Ccode\u003EGitHub Page\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cbr\u002F\u003E\n\u003Cp\u003E轉成 \u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E 設定檔的完整原始碼：\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-attr\"\u003Eon:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epush:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ebranches:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Emaster\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Epaths-ignore:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;README.md&#x27;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Edeploy-github-page:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-comment\"\u003E# The type of runner that the job will run on\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eruns-on:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eubuntu-latest\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E# Steps represent a sequence of tasks that will be executed as part of the job\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Esteps:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ECheckout\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fcheckout@v2\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ESetup\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Enode\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eenv\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fsetup-node@v2\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EInstall\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Edependencies\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ewith\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EYarn\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E--frozen-lockfile\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ERun\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Etest\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ewith\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EJest\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Etest\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EGenerate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EStatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ESite\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Egenerate\u003C\u002Fspan\u003E\n\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EJamesIves\u002Fgithub-pages-deploy-action@4.1.5\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attr\"\u003Ewith:\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Ebranch:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Egh-pages\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E# The branch the action should deploy to.\u003C\u002Fspan\u003E\n          \u003Cspan class=\"hljs-attr\"\u003Efolder:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Edist\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E# The folder the action should deploy.\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 1. Workflow\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ccode\u003Egit push origin master\u003C\u002Fcode\u003E 會觸發 \u003Ccode\u003EWorkflow\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E使用 \u003Ccode\u003Epaths-ignore\u003C\u002Fcode\u003E 過濾特定路徑，即如果單獨更改 \u003Ccode\u003EREADME.md\u003C\u002Fcode\u003E，即使推到 \u003Ccode\u003Emaster\u003C\u002Fcode\u003E 分支，也不會觸發自動化\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-comment\"\u003E# Workflow 名字\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-attr\"\u003Eon:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Epush:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Ebranches:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Emaster\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Epaths-ignore:\u003C\u002Fspan\u003E\n      \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&#x27;README.md&#x27;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 2. Job\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E指定虛擬機環境 \u003Ccode\u003Eubuntu-latest\u003C\u002Fcode\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Ejobs:\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E# Job 名字\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Edeploy-github-page:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003Eruns-on:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eubuntu-latest\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003EStep 3. Step &amp; Action\u003C\u002Fh3\u003E\n\u003Col\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003ECheckout\u003C\u002Fcode\u003E:\u003Cbr \u002F\u003E\n使用 \u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002Fcheckout\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E\u003Ccode\u003Eactions\u002Fcheckout@v2\u003C\u002Fcode\u003E\u003C\u002Fa\u003E，它會下載一份專案程式碼至運行的虛擬機上。\u003C\u002Fp\u003E\n\u003Cp\u003E如果工作流程有涉及使用到專案原始碼，或執行定義在專案上的 script，都是需要使用 \u003Ccode\u003Echeckout action\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003ESetup node env\u003C\u002Fcode\u003E + \u003Ccode\u003EInstall dependencies with Yarn\u003C\u002Fcode\u003E：\u003Cbr \u002F\u003E\n使用 \u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002Fsetup-node-js-environment\" target=\"_blank\" rel=\"noreferrer noopener\"\u003Esetup-node@v2\u003C\u002Fa\u003E 設置 node 環境，並依據 \u003Ccode\u003Eyarn.lock\u003C\u002Fcode\u003E 安裝專案依賴套件 \u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Fautomating-builds-and-tests\u002Fbuilding-and-testing-nodejs-or-python\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E(npm 可參考這裡)\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003ERun test with Jest\u003C\u002Fcode\u003E：\u003Cbr \u002F\u003E\n使用定義在專案內的 test script\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E\u003Ccode\u003EGenerate Static Site\u003C\u002Fcode\u003E + \u003Ccode\u003EDeploy\u003C\u002Fcode\u003E：\u003Cbr \u002F\u003E\n產生靜態檔案並部署至 Github Page，CD 直接使用 \u003Ca  href=\"https:\u002F\u002Fgithub.com\u002Fmarketplace\u002Factions\u002Fdeploy-to-github-pages\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EJamesIves\u002Fgithub-pages-deploy-action@4.1.5\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-attr\"\u003Esteps:\u003C\u002Fspan\u003E\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ECheckout\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fcheckout@v2\u003C\u002Fspan\u003E\n\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ESetup\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Enode\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eenv\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eactions\u002Fsetup-node@v2\u003C\u002Fspan\u003E\n\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EInstall\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Edependencies\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ewith\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EYarn\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E--frozen-lockfile\u003C\u002Fspan\u003E\n\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ERun\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Etest\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Ewith\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EJest\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Etest\u003C\u002Fspan\u003E\n\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EGenerate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EStatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003ESite\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Erun:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Eyarn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Egenerate\u003C\u002Fspan\u003E\n\n     \u003Cspan class=\"hljs-bullet\"\u003E-\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Euses:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003EJamesIves\u002Fgithub-pages-deploy-action@4.1.5\u003C\u002Fspan\u003E\n       \u003Cspan class=\"hljs-attr\"\u003Ewith:\u003C\u002Fspan\u003E\n         \u003Cspan class=\"hljs-attr\"\u003Ebranch:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Egh-pages\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E# 指定要 deploy 的分支\u003C\u002Fspan\u003E\n         \u003Cspan class=\"hljs-attr\"\u003Efolder:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003Edist\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E# 指定要 deploy 的資料夾\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3\u003E實際測試\u003C\u002Fh3\u003E\n\u003Ch4\u003E✔️ Case: 單元測試成功\u003C\u002Fh4\u003E\n\u003Cp\u003E在 Actions 頁面可以看到整個 Workflow，以及每個步驟的執行狀態，因為單元測試是成功的，後續網站也有順利被部署。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FlKkrg3q.png\" alt=\"run test action\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cp\u003ERepository 的首頁也可以看到成功的綠色小勾勾 ✔️\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FMVFcVdV.png\" alt=\"run test home\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cbr\u002F\u003E\n\u003Ch4\u003E❎ Case: 單元測試失敗\u003C\u002Fh4\u003E\n\u003Cp\u003E接著試試單元測試失敗的情境，可以看到 \u003Ccode\u003ERun test with Jest\u003C\u002Fcode\u003E 這個步驟失敗後，後續的 \u003Ccode\u003EGenerate Static Site\u003C\u002Fcode\u003E 和 \u003Ccode\u003EDeploy\u003C\u002Fcode\u003E 直接不執行。\u003C\u002Fp\u003E\n\u003Cp\u003E點開 \u003Ccode\u003ERun test with Jest\u003C\u002Fcode\u003E 詳細訊息，也可以看到是哪個測試出錯和整個測試報告。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002F2jbtqOD.png\" alt=\"fail test\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cbr\u002F\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡 補充\u003C\u002Fp\u003E\n\u003Cp\u003E我在 \u003Ccode\u003EREADME.md\u003C\u002Fcode\u003E 有添加 \u003Cstrong\u003E\u003Ccode\u003Eworkflow status badge\u003C\u002Fcode\u003E\u003C\u002Fstrong\u003E，可以看到 Workflow 的狀態，但它不是即時更新，跑完 Workflow 後，需要再等個幾分鐘。\u003C\u002Fp\u003E\n\u003Cp\u003E支援 \u003Ccode\u003Equery parameters\u003C\u002Fcode\u003E，可以顯示特定 \u003Ccode\u003Ebranch\u003C\u002Fcode\u003E 或 \u003Ccode\u003Eevent\u003C\u002Fcode\u003E 的 Workflow 狀態，詳細設定可參見\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\u002Fmonitoring-and-troubleshooting-workflows\u002Fadding-a-workflow-status-badge\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E官網\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fi.imgur.com\u002FNo01pI0.png\" alt=\"workflow status badge\" \u002F\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E&lt;!-- 基本語法 --&gt;\n\n![\u003Cspan class=\"hljs-string\"\u003Eexample workflow\u003C\u002Fspan\u003E](\u003Cspan class=\"hljs-link\"\u003Ehttps:\u002F\u002Fgithub.com\u002F&lt;OWNER&gt;\u002F&lt;REPOSITORY&gt;\u002Factions\u002Fworkflows\u002F&lt;WORKFLOW_FILE&gt;\u002Fbadge.svg\u003C\u002Fspan\u003E)\n\n&lt;!-- 範例 --&gt;\n\n![\u003Cspan class=\"hljs-string\"\u003EDeploy\u003C\u002Fspan\u003E](\u003Cspan class=\"hljs-link\"\u003Ehttps:\u002F\u002Fgithub.com\u002FJennieSH\u002Fgithub-action-demo\u002Factions\u002Fworkflows\u002Fdeploy.yml\u002Fbadge.svg\u003C\u002Fspan\u003E)\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"總結\" title=\"總結\"\u003E\u003Ca href=\"#總結\"\u003E總結\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cp\u003E\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGitHub Actions 官方文件\u003C\u002Fa\u003E 還有超級多設定可以使用，因為這次需求也沒很複雜，作為初探 Action，是還不錯的經驗 🎉，下次有機會，會再嘗試建立其他的 Workflow。\u003C\u002Fp\u003E\n\u003Chr \u002F\u003E\n\u003Ch2 id=\"參考資料\" title=\"參考資料\"\u003E\u003Ca href=\"#參考資料\"\u003E參考資料\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fdocs.github.com\u002Fen\u002Factions\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGitHub Actions Docs\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fwww.ruanyifeng.com\u002Fblog\u002F2019\u002F09\u002Fgetting-started-with-github-actions.html\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EGitHub Actions 入门教程\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fmedium.com\u002Fstarbugs\u002F%E5%AF%A6%E4%BD%9C%E9%96%8B%E6%BA%90%E5%B0%8F%E5%B7%A5%E5%85%B7-%E8%88%87-github-actions-%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%9B%B8%E9%81%87-3dd2d70eeb\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E實作開源小工具，與 Github Actions 的第一次相遇！\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003Ch6\u003Etags: \u003Ccode\u003EDevOps\u003C\u002Fcode\u003E、\u003Ccode\u003ECI\u002FCD\u003C\u002Fcode\u003E、\u003Ccode\u003EGitHub\u003C\u002Fcode\u003E、\u003Ccode\u003EGitHub Action\u003C\u002Fcode\u003E、\u003Ccode\u003EGitHub Page\u003C\u002Fcode\u003E\u003C\u002Fh6\u003E\n",toc:{title:b,subtitles:["What is CI\u002FCD ?","What is Github Actions ?","如何添加設定檔？","基本概念","實作","總結","參考資料"]},wordCount:1594}}}}(null,"GitHub Actions - Creating My First Workflow (CI\u002FCD)","2021-11-19T00:00:00.000Z"));