window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002F_nuxt\u002Fstatic\u002F1734201401",layout:"default",error:a,serverRendered:true,routePath:"\u002Fdev\u002FGit\u002Fgithub-ssh",config:{_app:{basePath:"\u002F",assetsPath:"\u002F_nuxt\u002F",cdnURL:a}},globalRefs:{},ssrRefs:{"articleMatter-Git-github-ssh":{info:{title:b,fileName:"github-ssh",description:"如何使用 SSH 與 GitHub 連線筆記整理",createdAt:c,updatedAt:c,tags:["Git","GitHub"]},content:"\u003Ch6\u003Etags: \u003Ccode\u003EGit\u003C\u002Fcode\u003E、\u003Ccode\u003EGitHub\u003C\u002Fcode\u003E\u003C\u002Fh6\u003E\n\u003Ch1 id=\"[Note] 使用 SSH 與 Github 連線\" title=\"[Note] 使用 SSH 與 Github 連線\"\u003E[Note] 使用 SSH 與 Github 連線\u003C\u002Fh1\u003E\n\u003Cp\u003E主要是參考 \u003Ca  href=\"https:\u002F\u002Fawsm.page\u002Fgit\u002Fuse-github-with-ssh-complete-guide-including-vscode-setup\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EUse GitHub with SSH - Complete guide including VSCode setup\u003C\u002Fa\u003E 和\u003Ca  href=\"https:\u002F\u002Fcynthiachuang.github.io\u002FGenerating-a-Ssh-Key-and-Adding-It-to-the-Github\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E【Git】使用 SSH 金鑰與 GitHub 連線\u003C\u002Fa\u003E 這兩篇內容，上述兩篇對步驟有都有更進一步說明，推薦閱讀，此筆記內容是著重記錄步驟。\u003C\u002Fp\u003E\n\u003Ch2 id=\"設置基本訊息\" title=\"設置基本訊息\"\u003E\u003Ca href=\"#設置基本訊息\"\u003E設置基本訊息\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Egit config --global user.name \u003Cspan class=\"hljs-string\"\u003E&quot;YOUR_USERNAME&quot;\u003C\u002Fspan\u003E\ngit config --global user.email \u003Cspan class=\"hljs-string\"\u003E&quot;YOUR_EMAIL_ADDRESS&quot;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"生成新的 SSH 密鑰\" title=\"生成新的 SSH 密鑰\"\u003E\u003Ca href=\"#生成新的 SSH 密鑰\"\u003E生成新的 SSH 密鑰\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003ESTEP 1. generate SSH key pair\u003C\u002Fh4\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Essh-keygen -t ed25519 -C \u003Cspan class=\"hljs-string\"\u003E&quot;YOUR_GITHUB_EMAIL_ADDRESS&quot;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003EEnter file \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Ewhich\u003C\u002Fspan\u003E to save the key (\u002FUsers\u002F&lt;username&gt;\u002F.ssh\u002Fid_ed25519): \u002FUsers\u002F&lt;username&gt;\u002F.ssh\u002Fgitub_key \u003Cspan class=\"hljs-comment\"\u003E# 金鑰儲存的位置與檔名\u003C\u002Fspan\u003E\n\nEnter passphrase (empty \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E no passphrase) \u003Cspan class=\"hljs-comment\"\u003E# 金鑰保護密碼\u003C\u002Fspan\u003E\nEnter same passphrase again \u003Cspan class=\"hljs-comment\"\u003E# 再輸入一次金鑰保護密碼\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003ESTEP 2. 配置 config 檔案(optional)\u003C\u002Fh4\u003E\n\u003Cp\u003E因為上面有更改了金鑰的預設名稱(更改為 \u003Ccode\u003Egithub_key\u003C\u002Fcode\u003E，如果使用的為預設，可跳過此步驟)，需另配置一個 config 檔\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Evim ~\u002F.ssh\u002Fconfig\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E檔案內需加入下面內容，IdentityFile 為剛建立的金鑰\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E Host github.com\n  HostName github.com\n  User JennieShao\n  IdentityFile ~\u002F.ssh\u002Fgithub_key\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch2 id=\"連結至 GitHub\" title=\"連結至 GitHub\"\u003E\u003Ca href=\"#連結至 GitHub\"\u003E連結至 GitHub\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Ch4\u003ESTEP 1. 檢視並複製生成的公鑰\u003C\u002Fh4\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-built_in\"\u003Ecat\u003C\u002Fspan\u003E ~\u002F.ssh\u002Fgithub_key.pub\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4\u003ESTEP 2. 在 GitHub 新增公鑰\u003C\u002Fh4\u003E\n\u003Cp\u003E點擊右上角 Avatar =&gt; \u003Ccode\u003ESettings\u003C\u002Fcode\u003E =&gt; \u003Ccode\u003ESSH and GPG keys\u003C\u002Fcode\u003E =&gt; \u003Ccode\u003ENew SSH key\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Ch4\u003ESTEP 3. 連線測試\u003C\u002Fh4\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Essh -T git@github.com\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E如果是第一次操作的話，可能出現\u003Ca  href=\"https:\u002F\u002Fstackoverflow.com\u002Fquestions\u002F71276591\u002Fhow-to-unlink-the-previous-ssh-key-in-git\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E下面的錯誤訊息\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003EThe authenticity of host 'github.com (...)' can't be established.\nED25519 key fingerprint is SHA256:................\nThis key is not known by any other names\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003EThis message has nothing to do with the key that you created. The SSH server that you connected to starts by identifying itself to your ssh client, and this message means that your client doesn’t recognize the server that it connected to. You’ll get a message like this the first time you connect to any SSH server.\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E這邊需要輸入 yes\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003EAre you sure you want to \u003Cspan class=\"hljs-built_in\"\u003Econtinue\u003C\u002Fspan\u003E connecting (\u003Cspan class=\"hljs-built_in\"\u003Eyes\u003C\u002Fspan\u003E\u002Fno\u002F[fingerprint])? \u003Cspan class=\"hljs-built_in\"\u003Eyes\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E再執行一次測試指令看是否設置成功，成功的話會出現 \u003Ccode\u003EHi username! You've successfully authenticated, but GitHub does not provide shell access.\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003Essh -T git@github.com\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cdiv class=\"info\"\u003E\n\u003Cp\u003E💡\u003Cstrong\u003E補充\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Col\u003E\n\u003Cli\u003E\n\u003Cp\u003E如果一開始就使用 HTTPS 的傳輸協定，中途才改用 SSH，需要重新再設定 remote repository 的網址\u003C\u002Fp\u003E\n\u003C\u002Fli\u003E\n\u003Cli\u003E\n\u003Cp\u003E如果有設定金鑰的保護密碼，但又不想每次使用金鑰又輸入一次密碼的話，可以考慮設定 ssh-agent\u003C\u002Fp\u003E\n\u003Cpre class=\"hljs\"\u003E\u003Ccode\u003E\u003Cspan class=\"hljs-built_in\"\u003Eeval\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E&quot;\u003Cspan class=\"hljs-subst\"\u003E$(ssh-agent -s)\u003C\u002Fspan\u003E&quot;\u003C\u002Fspan\u003E\nssh-add ~\u002F.ssh\u002Fgithub_key\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"參考資料\" title=\"參考資料\"\u003E\u003Ca href=\"#參考資料\"\u003E參考資料\u003C\u002Fa\u003E\u003C\u002Fh2\u003E\n\u003Col\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fawsm.page\u002Fgit\u002Fuse-github-with-ssh-complete-guide-including-vscode-setup\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003EUse GitHub with SSH - Complete guide including VSCode setup\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca  href=\"https:\u002F\u002Fcynthiachuang.github.io\u002FGenerating-a-Ssh-Key-and-Adding-It-to-the-Github\u002F\" target=\"_blank\" rel=\"noreferrer noopener\"\u003E【Git】使用 SSH 金鑰與 GitHub 連線\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003C\u002Fol\u003E\n",toc:{title:b,subtitles:["設置基本訊息","生成新的 SSH 密鑰","連結至 GitHub","參考資料"]},wordCount:593}}}}(null,"[Note] 使用 SSH 與 Github 連線","2022-11-21T00:00:00.000Z"));