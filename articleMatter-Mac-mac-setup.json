{"info":{"title":"Mac 環境、工具建置","fileName":"mac-setup","description":"記錄剛拿到新電腦時，如何一步步調教成自己的熟悉開發環境！","createdAt":"2022-11-21T00:00:00.000Z","updatedAt":"2022-11-21T00:00:00.000Z","tags":["MacOS","Homebrew","nvm","VScode"]},"content":"<h6>tags: <code>MacOS</code>、<code>Homebrew</code>、<code>nvm</code>、<code>VScode</code></h6>\n<h1 id=\"Mac 環境、工具建置\" title=\"Mac 環境、工具建置\">Mac 環境、工具建置</h1>\n<p>因為最近剛換 MacBook Pro 14，趁這次機會，把自己順手的環境設定和工具整理一下，以後換電腦或工作，就能快速的把新電腦調教成熟悉的開發環境了🍺</p>\n<p>這系列懶人包會拆成好幾章，主要都是筆記步驟，如果更了解工具，基本都會附上相關連結，方便有興趣的人進一步去研究。</p>\n<h2 id=\"Homebrew\" title=\"Homebrew\"><a href=\"#Homebrew\">Homebrew</a></h2>\n<p>用來管理 MacOS 上的軟體安裝，強推安裝 👍</p>\n<h3>Step 1. 安裝 Homebrew</h3>\n<pre class=\"hljs\"><code>/bin/bash -c <span class=\"hljs-string\">&quot;<span class=\"hljs-subst\">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span>\n</code></pre>\n<h3>Step 2. 設定 config</h3>\n<p><img src=\"https://i.imgur.com/1P1P7Cp.png\" alt=\"hombrew\" /></p>\n<p>雖然跑出 Installaltion successfull 訊息，但整個流程尚未結束，需要跟著下方提示三個步驟依序輸入(記得改成自己電腦的 username)：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;# Set PATH, MANPATH, etc., for Homebrew.&#x27;</span> &gt;&gt; /Users/{YOUR USER NAME}/.zprofile\n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">&#x27;eval $(/opt/homebrew/bin/brew shellenv)&#x27;</span> &gt;&gt; /Users/{YOUR USER NAME}/.zprofile\n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-built_in\">eval</span> $(/opt/homebrew/bin/brew shellenv)\n</code></pre>\n<p>可輸入指令，確認有無安裝成功，成功的話會出面版本訊息：</p>\n<pre class=\"hljs\"><code>brew --version\n<span class=\"hljs-comment\">#Homebrew 3.6.11</span>\n<span class=\"hljs-comment\">#Homebrew/homebrew-core (git revision c5924a8dadc; last commit 2022-11-20)</span>\n<span class=\"hljs-comment\">#Homebrew/homebrew-cask (git revision 94fa14b0a3; last commit 2022-11-20)</span>\n</code></pre>\n<div class=\"info\">\n<p>💡 <strong>補充</strong></p>\n<p>如果忘記輸入 <code>Next steps</code> 那三個步驟的話，後續使用 homebrew 指令時，會遇到 <a  href=\"https://stackoverflow.com/questions/36657321/after-installing-homebrew-i-get-zsh-command-not-found-brew\" target=\"_blank\" rel=\"noreferrer noopener\"><strong><code>zsh: command not found: brew</code></strong></a> 問題，遇到時，再補執行步驟即可。</p>\n<p>執行完畢後，在 terminal 輸入 <code>brew help</code> 或 <code>brew --version</code>，確認有沒有執行成功，只要不會再出現 <code>zsh: command not found: brew</code>，就大功告成了。</p>\n</div>\n<h2 id=\"Google Chrome\" title=\"Google Chrome\"><a href=\"#Google Chrome\">Google Chrome</a></h2>\n<p>Google 家的瀏覽器，基本筆者開發常駐使用就是 chrome ＆ safari，也可選擇自己喜歡的瀏覽器安裝</p>\n<pre class=\"hljs\"><code>brew install --cask google-chrome\n</code></pre>\n<h2 id=\"Git\" title=\"Git\"><a href=\"#Git\">Git</a></h2>\n<p>版本控制軟體，必裝清單之一</p>\n<pre class=\"hljs\"><code>brew install git\n</code></pre>\n<h2 id=\"VS code\" title=\"VS code\"><a href=\"#VS code\">VS code</a></h2>\n<p>微軟家的免費 IDE，另外常見 IDE 還有 <code>WebStorm</code>、<code>Sublime</code> 等，一樣選擇自己喜歡的安裝即可～</p>\n<pre class=\"hljs\"><code>brew install --cask visual-studio-code\n</code></pre>\n<h2 id=\"nvm - Node Version Manager\" title=\"nvm - Node Version Manager\"><a href=\"#nvm - Node Version Manager\">nvm - Node Version Manager</a></h2>\n<p>可以使用 nvm 進行 node.js 版本管理，強推安裝 👍，可以優雅地在不同版本的 node.js 間切換 (因為有些舊專案，用新版的 node.js 執行會有問題，所以有時需要視專案，切換到舊版本)</p>\n<h3>Step 1. 安裝 nvm</h3>\n<pre class=\"hljs\"><code>brew install nvm\n</code></pre>\n<h3>Step 2. 設定 nvm</h3>\n<p>安裝完成後，依照提示依序完成初始步驟：</p>\n<p><img src=\"https://i.imgur.com/pSj0Uo5.png\" alt=\"nvm\" /></p>\n<ol>\n<li><strong>新建 <code>.nvm</code> 目錄</strong></li>\n</ol>\n<pre class=\"hljs\"><code>mkdir ~/.nvm\n</code></pre>\n<ol start=\"2\">\n<li><strong>設定 <code>/.zshrc </code> 配置文件</strong></li>\n</ol>\n<pre class=\"hljs\"><code>vim ~/.zshrc\n</code></pre>\n<p>先輸入 <code>i</code> 進入編輯，再貼上下面這段，輸入 <code>:wq</code>，存檔後離開</p>\n<pre class=\"hljs\"><code>export NVM_DIR=&quot;$HOME/.nvm&quot;\n[ -s &quot;/opt/homebrew/opt/nvm/nvm.sh&quot; ] &amp;&amp; \\. &quot;/opt/homebrew/opt/nvm/nvm.sh&quot;  # This loads nvm\n[ -s &quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot; ] &amp;&amp; \\. &quot;/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm&quot;  # This loads nvm bash_completion\n</code></pre>\n<ol start=\"3\">\n<li><strong>使用 <code>source</code> 重新執行初始化的配置</strong></li>\n</ol>\n<pre class=\"hljs\"><code>source ~/.zshrc\n</code></pre>\n<h3>管理 node.js 版本</h3>\n<pre class=\"hljs\"><code>nvm ls-remote  <span class=\"hljs-comment\"># 列出可安裝的版本</span>\nnvm <span class=\"hljs-built_in\">ls</span>  <span class=\"hljs-comment\"># 列出本機已安裝的版本</span>\nnvm install &lt;version&gt; <span class=\"hljs-comment\"># 安裝特定版本</span>\nnvm use &lt;version&gt; <span class=\"hljs-comment\"># 切換特定版本</span>\nnode -v <span class=\"hljs-comment\"># 查看目前使用的版本</span>\n</code></pre>\n<h2 id=\"Yarn\" title=\"Yarn\"><a href=\"#Yarn\">Yarn</a></h2>\n<p>套件管理工具， 常見的有 <code>npm</code>、<code>pnpm</code> 等，可擇一安裝使用</p>\n<pre class=\"hljs\"><code>brew install yarn\n</code></pre>\n<h2 id=\"iTerms2 + oh-my-zsh\" title=\"iTerms2 + oh-my-zsh\"><a href=\"#iTerms2 + oh-my-zsh\">iTerms2 + oh-my-zsh</a></h2>\n<ul>\n<li><strong>iTerms2</strong> 比 MAC 原生的 Terminal 提供<a  href=\"https://apple.stackexchange.com/questions/25143/what-is-the-difference-between-iterm2-and-terminal\" target=\"_blank\" rel=\"noreferrer noopener\">更多功能</a>，可取代原生的終端機使用</li>\n<li><strong>oh-my-zsh</strong> 為 zsh 的 framework，可用來管理 zsh 設定</li>\n</ul>\n<p>主要會安裝這兩個組合的最大原因，是為了美美的 command line 環境！！每次輸入指令時候，心情就會非常美麗～～<s>我的快樂就是這麼樸實無華</s></p>\n<p>p.s. 因為步驟比較多，設定會另外開一篇文章記錄</p>\n<h2 id=\"參考資料\" title=\"參考資料\"><a href=\"#參考資料\">參考資料</a></h2>\n<ol>\n<li><a  href=\"https://brew.sh\" target=\"_blank\" rel=\"noreferrer noopener\">Homebrew</a></li>\n<li><a  href=\"https://www.google.com/intl/zh-TW/chrome/\" target=\"_blank\" rel=\"noreferrer noopener\">Google Chrome</a></li>\n<li><a  href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noreferrer noopener\">Git</a></li>\n<li><a  href=\"https://code.visualstudio.com/\" target=\"_blank\" rel=\"noreferrer noopener\">VS code</a></li>\n<li><a  href=\"https://github.com/nvm-sh/nvm\" target=\"_blank\" rel=\"noreferrer noopener\">nvm - Node Version Manager</a></li>\n<li><a  href=\"https://classic.yarnpkg.com/en/\" target=\"_blank\" rel=\"noreferrer noopener\">Yarn</a></li>\n<li><a  href=\"https://iterm2.com/\" target=\"_blank\" rel=\"noreferrer noopener\">iTerms2</a></li>\n<li><a  href=\"https://ohmyz.sh/\" target=\"_blank\" rel=\"noreferrer noopener\">oh-my-zsh</a></li>\n<li><a  href=\"https://onejar99.com/mac-homebrew-homebrew-cask-mac/#_Homebrew_Homebrew-Cask\" target=\"_blank\" rel=\"noreferrer noopener\">Homebrew 與 Homebrew-Cask —— 更快速、簡潔、優雅地管理你的 Mac 軟體套件</a></li>\n<li><a  href=\"https://qizhanming.com/blog/2020/07/29/how-to-install-node-using-nvm-on-macos-with-brew\" target=\"_blank\" rel=\"noreferrer noopener\">macOS 上使用 brew 安裝 NVM 管理 node.js</a></li>\n<li><a  href=\"https://pjchender.dev/nodejs/nvm/\" target=\"_blank\" rel=\"noreferrer noopener\">[NodeJS] 透過 NVM 安裝與使用 Node.js</a></li>\n</ol>\n","toc":{"title":"Mac 環境、工具建置","subtitles":["Homebrew","Google Chrome","Git","VS code","nvm - Node Version Manager","Yarn","iTerms2 + oh-my-zsh","參考資料"]}}