{"info":{"title":"[Debug] Flutter Image.network() 在 Web 下，圖片會載入失敗","fileName":"image-network-cors","description":"Flutter 開發之踩坑日記：在 web 開發模式下，使用 Image.network() 圖片會載入失敗。","createdAt":"2024-04-14T00:00:00.000Z","updatedAt":"2024-04-14T00:00:00.000Z","tags":["Flutter","Image","Network","CORS"]},"content":"<h6>tags: <code>Flutter</code>、<code>Bug</code></h6>\n<h1 id=\"[Debug] Flutter Image.network() 在 Web 下，圖片會載入失敗\" title=\"[Debug] Flutter Image.network() 在 Web 下，圖片會載入失敗\">[Debug] Flutter Image.network() 在 Web 下，圖片會載入失敗</h1>\n<h2 id=\"問題\" title=\"問題\"><a href=\"#問題\">問題</a></h2>\n<p><img src=\"https://i.imgur.com/qpnv0hu.jpg\" alt=\"\" /></p>\n<p>使用 <code>Image.network()</code>，會跑出下面的錯誤訊息，而且只在 web 下才會出現，在 iOS/Android 圖片都會順利顯示。</p>\n<blockquote>\n<p>══╡ EXCEPTION CAUGHT BY IMAGE RESOURCE SERVICE ╞════════════════════════════════════════════════════<br />\nThe following ImageCodecException was thrown resolving an image codec:<br />\nFailed to load network image.<br />\nImage URL: https:…<br />\nTrying to load an image from another domain? Find answers at:<br />\n<a  href=\"https://flutter.dev/docs/development/platform-integration/web-images\" target=\"_blank\" rel=\"noreferrer noopener\">https://flutter.dev/docs/development/platform-integration/web-images</a><br />\nWhen the exception was thrown, this was the stack<br />\nImage provider: NetworkImage(“https://…”, scale:1)<br />\nImage key: NetworkImage(“https://…”, scale: 1)</p>\n</blockquote>\n<h2 id=\"原因\" title=\"原因\"><a href=\"#原因\">原因</a></h2>\n<!--\n~~在 [Github issue](https://github.com/flutter/flutter/issues/73327#issuecomment-764646411) 有看到相關討論，目前推測是 CanvasKit 問題，因為 `Web renderers` 預設值為 `auto`。~~\n\n -->\n<p>主要原因應該是 <a  href=\"https://github.com/flutter/flutter/issues/73109#issuecomment-790628014\" target=\"_blank\" rel=\"noreferrer noopener\">CORS 問題</a>，它可能會受到所使用的 web renderer 影響，解決方向主要有三個：</p>\n<ol>\n<li>第一個直接解決根本的 CORS 問題，需要請後端協助修改 headers 相關設定</li>\n<li>使用代理服務器： 設置一個代理服務器來轉發 client 請求</li>\n<li>第二個方向就是修改 web renderer 設定，下面解法基本是圍繞的第二個方向去解的。\n<blockquote>\n<p>The HTML renderer can load cross-origin images without extra configuration. so you could use these commands to run and build the app</p>\n</blockquote>\n</li>\n</ol>\n<br/>\n<p>當 <code>--web-renderer=auto</code>(預設值)，會根據使用者的裝置，自動選擇最適合的 renderer，在 desktop browser 下，預設使用的就是 CanvasKit，需要指定成 <code>html</code>，才能解決。</p>\n<div class=\"info\">\n<p>💡 <strong>Flutter 在 <a  href=\"https://docs.flutter.dev/development/platform-integration/web/renderers#command-line-options\" target=\"_blank\" rel=\"noreferrer noopener\">Web 平台上的渲染引擎設定</a>，有三種可選擇：</strong></p>\n<ul>\n<li><strong><code>html</code></strong>：使用瀏覽器原生的 HTML、CSS、JavaScript 來渲染應用程式，<strong>支援最廣泛但效能較差</strong>。</li>\n<li><strong><code>canvaskit</code></strong>：使用 Skia Graphics Engine 將 Flutter 畫面轉換成 Canvas 元素，相較於 html 有較好的效能，但相容性較差。</li>\n<li><strong><code>auto</code></strong>：根據瀏覽器的支援度自動選擇渲染引擎，預設為 canvaskit，但若瀏覽器支援度足夠高則會自動切換為 html。</li>\n</ul>\n</div>\n<h2 id=\"解決方法\" title=\"解決方法\"><a href=\"#解決方法\">解決方法</a></h2>\n<h3>方法一：修改 Flutter 設定檔（一勞永逸）</h3>\n<p>找到 web 資料夾底下的 <code>index.html</code> 檔案，在 initializeEngine 設定中加入<code>renderer:'html'</code>，之後不論是用 VS code debugging 或者終端機下 <code>flutter run --debug -d chrome</code>，都可以順利看到圖片了。</p>\n<pre class=\"hljs\"><code>// index.html\n\n<span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span> ... <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\">\n    <span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;load&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">ev</span>) {\n      _flutter.<span class=\"hljs-property\">loader</span>.<span class=\"hljs-title function_\">loadEntrypoint</span>({\n        <span class=\"hljs-attr\">serviceWorker</span>: {\n          <span class=\"hljs-attr\">serviceWorkerVersion</span>: serviceWorkerVersion,\n        },\n        <span class=\"hljs-attr\">onEntrypointLoaded</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">engineInitializer</span>) {\n          engineInitializer.<span class=\"hljs-title function_\">initializeEngine</span>({\n            <span class=\"hljs-attr\">renderer</span>:<span class=\"hljs-string\">&#x27;html&#x27;</span> <span class=\"hljs-comment\">// 這邊指定 renderer</span>\n          }).<span class=\"hljs-title function_\">then</span>(<span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">appRunner</span>) {\n            appRunner.<span class=\"hljs-title function_\">runApp</span>();\n          });\n        }\n      });\n    });\n  </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span>\n</code></pre>\n<p><img src=\"https://i.imgur.com/6UOb2Ot.png\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/JSSHPih.jpg\" alt=\"\" /></p>\n<br/>\n<h3>方法二：passing flag (適合慣用 Terminal debugging 的人)</h3>\n<p>將指令後面多加 <code>--web-renderer html</code>，缺點是每次都要打這段</p>\n<pre class=\"hljs\"><code><span class=\"hljs-variable\">$flutter</span> run -d chrome --web-renderer html\n</code></pre>\n<br/>\n<h3>方法三：修改 VS code 設定檔 (適合慣用 VS code debugging 的人)</h3>\n<p>因為是針對 VS code 設定，所以缺點也很明顯，將來如果不是透過 VS code run debugging (e.g. 透過 Terminal)，圖片依舊會跑不出來；優點則是只要設定一次即可，而且可以依據需求，選擇要 by 專案或者是 by User 去做設置。</p>\n<br/>\n<p>下面兩種作法擇一即可，效果一樣：</p>\n<ul>\n<li>\n<h4><code>直接新增設定檔</code></h4>\n</li>\n</ul>\n<p>在專案底下，新增 <code>.vscode</code> 資料夾和 <code>settings.json</code> 檔案，檔案內容為：</p>\n<pre class=\"hljs\"><code><span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;dart.flutterWebRenderer&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;html&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p><img src=\"https://i.imgur.com/H4kkBzv.png\" alt=\"\" /></p>\n<ul>\n<li>\n<h4><code>透過 GUI</code></h4>\n</li>\n</ul>\n<p>從左下齒輪，找到 <code>Settings</code>，然後搜尋 <code>flutter renderer</code>，將原本 <code>Dart: Flutter Web Renderer</code> 由預設的 <code>auto</code> 改為 <code>html</code>。</p>\n<p><img src=\"https://i.imgur.com/Qv0wTYY.png\" alt=\"\" /></p>\n<h2 id=\"參考資料\" title=\"參考資料\"><a href=\"#參考資料\">參考資料</a></h2>\n<ul>\n<li><a  href=\"https://github.com/flutter/flutter/issues/73109\" target=\"_blank\" rel=\"noreferrer noopener\">Image.network() doesn’t show some images on the web but works on android.</a></li>\n<li><a  href=\"https://github.com/flutter/flutter/issues/73327\" target=\"_blank\" rel=\"noreferrer noopener\">[web]: NetworkImage crash while loading images</a></li>\n<li><a  href=\"https://github.com/Dart-Code/Dart-Code/pull/3000#issue-535900813\" target=\"_blank\" rel=\"noreferrer noopener\">Add a setting to easily set Flutter’s web renderer in user/workspace settings</a></li>\n<li><a  href=\"https://github.com/LunaGao/flag_flutter/issues/49#issuecomment-803008314\" target=\"_blank\" rel=\"noreferrer noopener\">Capture from onError ImageCodecException</a></li>\n<li><a  href=\"https://docs.flutter.dev/development/platform-integration/web/renderers\" target=\"_blank\" rel=\"noreferrer noopener\">Web renderers</a></li>\n<li><a  href=\"https://stackoverflow.com/questions/65653801/flutter-web-cant-load-network-image-from-another-domain\" target=\"_blank\" rel=\"noreferrer noopener\">Flutter web can’t load network image from another domain</a></li>\n</ul>\n","toc":{"title":"[Debug] Flutter Image.network() 在 Web 下，圖片會載入失敗","subtitles":["問題","原因","解決方法","參考資料"]}}