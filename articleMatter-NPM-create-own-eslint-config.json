{"info":{"title":"Create My Own ESLint Config Package !","fileName":"create-own-eslint-config","description":"實作自己的 ESLint Config Package。","createdAt":"2021-11-14T00:00:00.000Z","updatedAt":"2021-11-14T00:00:00.000Z","tags":["NPM","package","ESLint","config"]},"content":"<h1 id=\"Create My Own ESLint Config Package !\" title=\"Create My Own ESLint Config Package !\">Create My Own ESLint Config Package !</h1>\n<p>為了維護專案的程式品質，避免不同開發者放飛自我，ESLint 基本是每個專案必備的套件，透過 ESLint 可以規範整個團隊的開發風格和程式碼品質，也能降低新進開發者進專案的時間成本。學會了 ESLint，也可以嘗試實作 Stylelint，做法也是一樣的～</p>\n<h2 id=\"為什麼要將 ESLint Config 獨立出來？\" title=\"為什麼要將 ESLint Config 獨立出來？\"><a href=\"#為什麼要將 ESLint Config 獨立出來？\">為什麼要將 ESLint Config 獨立出來？</a></h2>\n<p>如果公司的需求，是常常需要開新的專案，這樣每次都需要設定(<s>複製</s>)一份 ESLint Config，且如果團隊規範的規則更改的話，需要至各至專案內更改，一來太繁瑣，二來也怕規則沒正確同步。</p>\n<p>為了解決上述問題和更有效管理團隊規範，可以把 ESLint Config 打包成一個獨立套件，每個新開專案只要負責安裝套件、套用該規則即可～</p>\n<h2 id=\"Configuring ESLint 配置選項\" title=\"Configuring ESLint 配置選項\"><a href=\"#Configuring ESLint 配置選項\">Configuring ESLint 配置選項</a></h2>\n<p>下面例子為 vue-cli 創建專案時，所產出來的 ESLint Config 檔案，藉此我們會探討一些常見的配置選項。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// .eslintrc.js</span>\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">root</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">env</span>: {\n      <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">parserOptions</span>: {\n      <span class=\"hljs-string\">&quot;parser&quot;</span>: <span class=\"hljs-string\">&quot;babel-eslint&quot;</span>\n    },\n    <span class=\"hljs-attr\">extends</span>: [\n      <span class=\"hljs-string\">&quot;plugin:vue/essential&quot;</span>,\n      <span class=\"hljs-string\">&quot;eslint:recommended&quot;</span>\n    ],\n    <span class=\"hljs-attr\">plugins</span>: [],\n    <span class=\"hljs-attr\">rules</span>: {},\n};\n</code></pre>\n<h3>- <code>root</code></h3>\n<p>默認情況下，ESLint 會在所有父級目錄裡尋找配置文件，一直到根目錄，適合所有項目都遵循一個特定的約定時。</p>\n<p>如果想 ESLint 限制到一個特定的項目，可設置 <code>&quot;root&quot;: true</code>，表示當前配置文件為 eslint 的根配置文件，使其停止在父級目錄繼續尋找，效果如下：</p>\n<pre class=\"hljs\"><code>home\n└── user\n    ├── .eslintrc\n    └── projectA\n        ├── .eslintrc  &lt;- Not used\n        └── lib\n            ├── .eslintrc  &lt;- { &quot;root&quot;: true }\n            └── main.js\n</code></pre>\n<h3>- <code>env</code></h3>\n<p><a  href=\"http://eslint.cn/docs/user-guide/configuring#specifying-environments\" target=\"_blank\" rel=\"noreferrer noopener\">運行環境</a>，用於定義全域變數，常見如下：</p>\n<ul>\n<li>browser : 瀏覽器環境中的全域變數</li>\n<li>node : Node.js 全域變數和 Node.js 作用域</li>\n<li>mocha : 添加所有的 Mocha 測試全域變數</li>\n</ul>\n<h3>- <code>parserOptions</code></h3>\n<p><a  href=\"http://eslint.cn/docs/user-guide/configuring#specifying-parser-options\" target=\"_blank\" rel=\"noreferrer noopener\">解析器的配置選項</a>，可以指定想要的 ECMAScript 版本等資訊。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// 官網範例</span>\n <span class=\"hljs-attr\">&quot;parserOptions&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n      <span class=\"hljs-attr\">&quot;ecmaVersion&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-number\">6</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-comment\">// 支持的ES語法版本，默認為5</span>\n      <span class=\"hljs-attr\">&quot;sourceType&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;module&quot;</span><span class=\"hljs-punctuation\">,</span> <span class=\"hljs-comment\">// 指定JS代碼來源的類型，默認為script</span>\n      <span class=\"hljs-attr\">&quot;ecmaFeatures&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span> <span class=\"hljs-comment\">// 表示你想使用的額外的語言特性</span>\n          <span class=\"hljs-attr\">&quot;jsx&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span> <span class=\"hljs-comment\">// 啟用jsx語法</span>\n    <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n</code></pre>\n<details class='spoiler'><summary>更多資訊</summary>\n<p><code>parserOptions</code> 的官方配置參數是不包括 <code>parser</code> 的，這裡會出現是因為使用 <code>Vue</code> 原因，詳情可參考<a  href=\"https://segmentfault.com/a/1190000017461203?utm_source=tag-newest\" target=\"_blank\" rel=\"noreferrer noopener\">這篇</a>。</p>\n<pre class=\"hljs\"><code>parserOptions: {\n  &quot;parser&quot;: &quot;babel-eslint&quot;\n},\n</code></pre>\n</details>\n<h3>- <code>extends</code></h3>\n<ul>\n<li><a  href=\"http://eslint.cn/docs/user-guide/configuring#extending-configuration-files\" target=\"_blank\" rel=\"noreferrer noopener\">規則繼承</a>，可繼承別人定義好的 eslint config 檔案。</li>\n<li>設定檔命名規則基本為 <code>eslint-config-*</code> 為前綴，在 extends 時可以把前綴省略。</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// .eslintrc.js</span>\nextends<span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">[</span>\n    <span class=\"hljs-comment\">// 由 plugin 提供的設定檔(ESLint config)就要加上 `plugin:` 的前綴</span>\n    <span class=\"hljs-string\">&quot;plugin:vue/essential&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-comment\">// 套件為 eslint-config-prettier，前綴 `eslint-config` 可省略</span>\n    <span class=\"hljs-string\">&quot;prettier&quot;</span>\n<span class=\"hljs-punctuation\">]</span><span class=\"hljs-punctuation\">,</span>\n</code></pre>\n<div class=\"info\">\n<p><strong>💡補充：</strong></p>\n<p>有些 plugin 會提供 ESLint config 給使用者做選擇。</p>\n<br>\n<p><strong><code>plugin:vue/essential</code></strong> 是繼承 <code>eslint-plugin-vue</code> 中 <a  href=\"https://github.com/vuejs/eslint-plugin-vue/blob/master/lib/configs/essential.js\" target=\"_blank\" rel=\"noreferrer noopener\"><code>config/essential.js</code></a> (eslint config) 中的規則設定。<br />\n<br/></p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// 官方 repo 中的 essential.js</span>\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n  <span class=\"hljs-attr\">extends</span>: <span class=\"hljs-built_in\">require</span>.<span class=\"hljs-title function_\">resolve</span>(<span class=\"hljs-string\">&#x27;./base&#x27;</span>),\n  <span class=\"hljs-attr\">rules</span>: {\n    <span class=\"hljs-string\">&#x27;vue/no-arrow-functions-in-watch&#x27;</span>: <span class=\"hljs-string\">&#x27;error&#x27;</span>,\n    <span class=\"hljs-string\">&#x27;vue/no-async-in-computed-properties&#x27;</span>: <span class=\"hljs-string\">&#x27;error&#x27;</span>,\n    ...}\n}\n</code></pre>\n</div>\n<h3>- <code>plugins</code></h3>\n<ul>\n<li>其他開發者定義的新規則，掛載至 plugin 後，使用者要自行決定如何去使用這些規則。</li>\n<li>命名規則為 <code>eslint-plugin-*</code> 為前綴，在擴充 plugin 時可以把前綴省略。</li>\n</ul>\n<br>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// .eslintrc.js</span>\n\n<span class=\"hljs-attr\">rules</span>: {\n    <span class=\"hljs-comment\">// enforce tag names to pascal case</span>\n    <span class=\"hljs-string\">&quot;vue/component-name-in-template-casing&quot;</span>: [\n      <span class=\"hljs-string\">&quot;error&quot;</span>,\n      <span class=\"hljs-string\">&quot;PascalCase&quot;</span>,\n      {\n        <span class=\"hljs-attr\">registeredComponentsOnly</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">ignores</span>: [<span class=\"hljs-string\">&quot;/^router-/&quot;</span>, <span class=\"hljs-string\">&quot;/^keep-/&quot;</span>, <span class=\"hljs-string\">&quot;/^transition-/&quot;</span>],\n      },\n    ],\n  },\n</code></pre>\n<p>上面例子為 <a  href=\"https://github.com/vuejs/eslint-plugin-vue/tree/master/lib/rules\" target=\"_blank\" rel=\"noreferrer noopener\"><code>eslint-plugin-vue</code></a> 提供的規則 - <a  href=\"https://eslint.vuejs.org/rules/component-name-in-template-casing.html\" target=\"_blank\" rel=\"noreferrer noopener\">強制組件大寫命名 (vue/component-name-in-template-casing)</a>，需要在 rules 開啟設定，更多設定可以參考 <a  href=\"https://eslint.vuejs.org/rules/\" target=\"_blank\" rel=\"noreferrer noopener\">eslint-plugin-vue 官網文件</a>。</p>\n<h3>- <code>rules</code></h3>\n<p><a  href=\"http://eslint.cn/docs/user-guide/configuring#extending-configuration-files\" target=\"_blank\" rel=\"noreferrer noopener\">自定義規則</a>，可擴展（或覆蓋）其他規則，後面規則會覆蓋前面的。</p>\n<div class=\"info\">\n<p><strong>💡補充：</strong></p>\n<p>一般規則可到 ESLint 官網查詢，如果是 xxx/aaa 這些開頭的規則，是 xxx plugin 自訂的規則，需到相對應插件的官網查看。</p>\n</div>\n<h2 id=\"創建 ESLint Config Package\" title=\"創建 ESLint Config Package\"><a href=\"#創建 ESLint Config Package\">創建 ESLint Config Package</a></h2>\n<p>這是一份常見的 <code>package.json</code> 檔案，其中包含 ESLint config 檔案，我們會嘗試把 ESLint config 抽出來成為獨立的 package。</p>\n<p><img src=\"https://i.imgur.com/e93bVOm.png\" alt=\"\" /></p>\n<h3>Step 1. 新增空資料夾 ＆ 初始化 npm</h3>\n<pre class=\"hljs\"><code>// 新增空資料夾\n$ mkdir eslint-config-demo\n\n$ cd eslint-config-demo\n\n// 初始化 npm\n$ npm init\n</code></pre>\n<div class=\"warning\">\n<p><strong>⚠️ 注意：</strong><br />\n<strong>檔名一定要 <code>eslint-config-*</code></strong>，否則無法被 ESLint 讀取成功。</p>\n</div>\n<p>初始化完後，會得到一個 <code>package.json</code> 檔案。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// package.json</span>\n\n<span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-attr\">&quot;name&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;eslint-config-demo&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;version&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;1.0.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;description&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;main&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;index.js&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;scripts&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;test&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;echo \\&quot;Error: no test specified\\&quot; &amp;&amp; exit 1&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;author&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;license&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;ISC&quot;</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<h3>Step 2. 新增 eslint 相關的 <code>devDependencies</code> 至 <code>package.json</code></h3>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// package.json</span>\n\n<span class=\"hljs-punctuation\">{</span>\n  ...<span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;peerDependencies&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;@vue/cli-plugin-eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;~4.5.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;babel-eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^10.1.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^6.7.2&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;eslint-plugin-vue&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^6.2.2&quot;</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;devDependencies&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;@vue/cli-plugin-eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;~4.5.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;babel-eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^10.1.0&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;eslint&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^6.7.2&quot;</span><span class=\"hljs-punctuation\">,</span>\n    <span class=\"hljs-attr\">&quot;eslint-plugin-vue&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-string\">&quot;^6.2.2&quot;</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p><a  href=\"https://eslint.org/docs/developer-guide/shareable-configs#publishing-a-shareable-config\" target=\"_blank\" rel=\"noreferrer noopener\">官網</a> 有提及如果設定檔案有依賴 plugin 的話可設定成 <code>peerDependency</code>。</p>\n<div class=\"info\">\n<p><a  href=\"https://www.itread01.com/content/1537702686.html\" target=\"_blank\" rel=\"noreferrer noopener\"><strong>💡 peerDependencies 補充</strong></a>：</p>\n<p>peerDependencies 的目的是提示宿主環境去安裝滿足插件 peerDependencies 所指定依賴的包，永遠都是引用宿主環境統一安裝的 npm 包。</p>\n</div>\n<h3>Step 3. 新增 <code>.eslintrc.js</code></h3>\n<p>設定 eslint config，內容與 <code>package.json</code> 中的 <code>eslintConfig</code> 相同，但這裡需要用 module 寫法，如果有其他規則要添加，都可以撰寫至這份檔案中。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// .eslintrc.js</span>\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    <span class=\"hljs-attr\">root</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">env</span>: {\n      <span class=\"hljs-string\">&quot;node&quot;</span>: <span class=\"hljs-literal\">true</span>\n    },\n    <span class=\"hljs-attr\">extends</span>: [\n      <span class=\"hljs-string\">&quot;plugin:vue/essential&quot;</span>,\n      <span class=\"hljs-string\">&quot;eslint:recommended&quot;</span>\n    ],\n    <span class=\"hljs-attr\">parserOptions</span>: {\n      <span class=\"hljs-string\">&quot;parser&quot;</span>: <span class=\"hljs-string\">&quot;babel-eslint&quot;</span>\n    },\n    <span class=\"hljs-attr\">rules</span>: {\n      <span class=\"hljs-comment\">// 禁止使用 var</span>\n      <span class=\"hljs-string\">&quot;no-var&quot;</span>: <span class=\"hljs-string\">&quot;error&quot;</span>\n    }\n};\n</code></pre>\n<h3>Step 4. 新增 <code>index.js</code></h3>\n<p>為 package 的入口檔案， 本體是 <code>.eslintrc.js</code>。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// index.js</span>\n\n<span class=\"hljs-keyword\">const</span> eslintrc = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./.eslintrc.js&#x27;</span>);\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = eslintrc;\n</code></pre>\n<h3>Step 5. 補上 <code>lock 檔</code> 和 <code>.gitignore</code></h3>\n<ul>\n<li>\n<p>install 完，取得 lock 檔案</p>\n<pre class=\"hljs\"><code>$ npm run install\n$ yarn\n</code></pre>\n</li>\n<li>\n<p>新增 <code>.gitignore</code></p>\n<pre class=\"hljs\"><code>// .gitignore\n\nnode_modules/\n</code></pre>\n</li>\n</ul>\n<h3>Step 6. 完成陽春版的 ESLint Config 檔案了！</h3>\n<ul>\n<li><a  href=\"https://github.com/JennieSH/eslint-config-demo\" target=\"_blank\" rel=\"noreferrer noopener\">eslint-config-demo</a> 的 Repository</li>\n</ul>\n<p><img src=\"https://i.imgur.com/CcuEZF8.png\" alt=\"\" /></p>\n<h2 id=\"使用 ESLint Config Package\" title=\"使用 ESLint Config Package\"><a href=\"#使用 ESLint Config Package\">使用 ESLint Config Package</a></h2>\n<h3>Step 1. 安裝</h3>\n<p>可以使用下述 <code>local</code>、<code>github</code> 和 <code>npm</code> 三種方法安裝 package：</p>\n<h4>- local</h4>\n<pre class=\"hljs\"><code>// npm i -D {{ 本機檔案路徑 }}\n$ npm i -D ../eslint-config-demo\n</code></pre>\n<pre class=\"hljs\"><code>$ yarn add -D ../eslint-config-demo\n</code></pre>\n<h4>- github</h4>\n<pre class=\"hljs\"><code>// npm i -D {{ git + github 網址 }}\n$ npm i -D git+https://github.com/JennieSH/eslint-config-demo.git\n</code></pre>\n<pre class=\"hljs\"><code>$ yarn add -D git+https://github.com/JennieSH/eslint-config-demo.git\n</code></pre>\n<div class=\"info\">\n<p><strong>💡補充</strong><br />\n如果有特定版號需求，可以在 github 網址後加指定版號</p>\n<pre class=\"hljs\"><code>$ npm i -D git+https://github.com/JennieSH/eslint-config-demo.git#v.1.0.0\n</code></pre>\n</div>\n<h4>- npm (需要先在 npmjs 上架，才能下載)</h4>\n<blockquote>\n<p><strong>💡補充參考</strong></p>\n<ul>\n<li><a  href=\"https://hackmd.io/tEcsYc-DQxqd5u_4onG_iw?view\" target=\"_blank\" rel=\"noreferrer noopener\">如何發佈 NPM Package</a></li>\n<li>已發佈的設定檔案：<a  href=\"https://github.com/JennieSH/eslint-config-vue\" target=\"_blank\" rel=\"noreferrer noopener\"><code>@jenniesh/eslint-config-vue</code></a></li>\n</ul>\n</blockquote>\n<pre class=\"hljs\"><code>// npm i -D {{ 套件名稱 }}\n$ npm i -D eslint-config-demo\n</code></pre>\n<pre class=\"hljs\"><code>$ yarn add -D eslint-config-demo\n</code></pre>\n<div class=\"warning\">\n<p><strong>❗注意</strong><br />\n如果是使用 <code>peerDependencies</code> 方法，要確定專案(宿主)內，相關依賴的的套件都需要被安裝。</p>\n</div>\n<div class=\"info\">\n<p><strong>💡補充</strong><br />\n如果是在 npm 上架過的 package，且 npm 版本大於 5，可以使用 <code>npx install-peerdeps</code>，一個指令就可以自動安裝全部的 <code>peerDependencies</code>。<br />\n<br></p>\n<ul>\n<li>npm</li>\n</ul>\n<pre class=\"hljs\"><code>npx install-peerdeps --dev eslint-config-demo\n</code></pre>\n<ul>\n<li>yarn</li>\n</ul>\n<pre class=\"hljs\"><code>npx install-peerdeps --dev eslint-config-demo -Y\n</code></pre>\n</div>\n<h3>Step 2. 設定專案內的 <code>.eslintrc.js</code> 檔案</h3>\n<p>在專案的 ESLint 設定檔內 extends 目標套件，其 <code>eslint-config-*</code> 前綴可省略。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// .eslintrc.js</span>\n\n{\n  ...,\n  <span class=\"hljs-string\">&quot;extends&quot;</span>: [ <span class=\"hljs-string\">&quot;demo&quot;</span> ]\n}\n</code></pre>\n<p>因為在設定檔的 rules 中有設置 <code>&quot;no-var&quot;: &quot;error&quot;</code>，完成 extends 設定後，就可以看到 eslint 報錯了～如果沒反應的話，VS Code 請重新啟動試試！</p>\n<p><img src=\"https://i.imgur.com/bkwUZMf.png\" alt=\"\" /></p>\n<div class=\"info\">\n<p><strong>💡補充</strong></p>\n<p><img src=\"https://i.imgur.com/NLkhZHd.png\" alt=\"\" /></p>\n<p>能在 VS Code 即時顯示 lint 的錯誤，是需要先安裝 <a  href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"noreferrer noopener\">ESLint</a> Extension，如果沒有安裝的話，可以靠腳本 <code>yarn lint</code>、<code>npm run lint</code> 做檢查。</p>\n</div>\n<h3>Step 3. VS Code 設定</h3>\n<p>基本的 <code>ESLint Config Package</code> 使用設定在第 2 步驟時就已經完成了。</p>\n<p>如果想進一步，針對一些簡單錯誤，存檔後能自動修正，需要再調整 VS Code 設定。</p>\n<ul>\n<li>確保 VS Code 有安裝 <a  href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"noreferrer noopener\">ESLint</a> Extension</li>\n<li>新增 <code>settings.json</code> 至 <code>.vscode</code> 資料夾</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">// settings.json</span>\n\n<span class=\"hljs-punctuation\">{</span>\n  <span class=\"hljs-comment\">// These are all my auto-save configs</span>\n  <span class=\"hljs-attr\">&quot;editor.formatOnSave&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-comment\">// turn it off for JS and JSX, we will do this via eslint</span>\n  <span class=\"hljs-attr\">&quot;[javascript]&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;editor.formatOnSave&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-attr\">&quot;[javascriptreact]&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;editor.formatOnSave&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">false</span>\n  <span class=\"hljs-punctuation\">}</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-comment\">// show eslint icon at bottom toolbar</span>\n  <span class=\"hljs-attr\">&quot;eslint.alwaysShowStatus&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span><span class=\"hljs-punctuation\">,</span>\n  <span class=\"hljs-comment\">// tell the ESLint plugin to run on save</span>\n  <span class=\"hljs-attr\">&quot;editor.codeActionsOnSave&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-punctuation\">{</span>\n    <span class=\"hljs-attr\">&quot;source.fixAll&quot;</span><span class=\"hljs-punctuation\">:</span> <span class=\"hljs-keyword\">true</span>\n  <span class=\"hljs-punctuation\">}</span>\n<span class=\"hljs-punctuation\">}</span>\n</code></pre>\n<p>如果無正常運作的話，請麻煩重啟 VS Code 試試!</p>\n<hr />\n<h2 id=\"參考資料\" title=\"參考資料\"><a href=\"#參考資料\">參考資料</a></h2>\n<ol>\n<li><a  href=\"https://segmentfault.com/a/1190000017461203?utm_source=tag-newest\" target=\"_blank\" rel=\"noreferrer noopener\">這可能是 vue 中 eslintrc.js 最詳細的介紹了</a></li>\n<li><a  href=\"https://www.freecodecamp.org/news/creating-your-own-eslint-config-package/\" target=\"_blank\" rel=\"noreferrer noopener\">How to Create Your Own ESLint Config Package</a></li>\n<li><a  href=\"https://medium.com/@PJCHENder?p=4b76c089848\" target=\"_blank\" rel=\"noreferrer noopener\">建立公司內部使用的 eslint-config package</a></li>\n<li><a  href=\"https://eslint.org/\" target=\"_blank\" rel=\"noreferrer noopener\">ESLint 官網</a></li>\n<li><a  href=\"https://github.com/wesbos/eslint-config-wesbos\" target=\"_blank\" rel=\"noreferrer noopener\">GitHub: eslint-config-wesbo</a></li>\n</ol>\n<h6>tags: <code>ESLint</code>、<code>NPM</code>、<code>config</code></h6>\n","toc":{"title":"Create My Own ESLint Config Package !","subtitles":["為什麼要將 ESLint Config 獨立出來？","Configuring ESLint 配置選項","創建 ESLint Config Package","使用 ESLint Config Package","參考資料"]}}