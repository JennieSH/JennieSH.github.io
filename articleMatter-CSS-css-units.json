{"info":{"title":"CSS Units - `px`、`％`、`em`、`rem`","fileName":"css-units","description":"一起認識 css 中常見的單位和它們的使用時機。","createdAt":"2023-06-06T00:00:00.000Z","updatedAt":"2022-06-06T00:00:00.000Z","tags":["CSS","CSS Units"]},"content":"<h6>tags: <code>CSS</code>、<code>CSS Units</code>、<code>px</code>、<code>％</code>、<code>em</code>、<code>rem</code></h6>\n<h1 id=\"CSS Units - <code>px</code>、<code>％</code>、<code>em</code>、<code>rem</code>\" title=\"CSS Units - <code>px</code>、<code>％</code>、<code>em</code>、<code>rem</code>\">CSS Units - <code>px</code>、<code>％</code>、<code>em</code>、<code>rem</code></h1>\n<h2 id=\"Absolute vs. Relative Units\" title=\"Absolute vs. Relative Units\"><a href=\"#Absolute vs. Relative Units\">Absolute vs. Relative Units</a></h2>\n<h3>Absolute Units</h3>\n<ul>\n<li>不受父元素或視窗大小影響，在<strong>任何裝置和瀏覽器，始終保持相同尺寸</strong></li>\n<li>如果不是做響應式網站/專案或 window 始終是固定尺寸，沒縮放需求，可以考慮使用</li>\n<li>常見的單位為： <code>px</code>、<code>pt</code>、<code>cm</code>、<code>in</code> 等</li>\n</ul>\n<blockquote>\n<p>網頁開發最常用絕對單位為 <code>px</code>，剩下的比較常用於印刷排版領域，所以在開發時會比較少見</p>\n</blockquote>\n<h3>Relative Units</h3>\n<ul>\n<li>相對於父元素或視窗大小進行縮放（取決於使用的單位）</li>\n<li>適合開發響應式網站</li>\n<li>常見的單位為： <code>%</code>、<code>em</code>、<code>rem</code>、<code>vw</code>、<code>vh</code> 等</li>\n</ul>\n<h2 id=\"常見單位介紹\" title=\"常見單位介紹\"><a href=\"#常見單位介紹\">常見單位介紹</a></h2>\n<h3>px</h3>\n<ul>\n<li>絕對單位</li>\n<li>尺寸在不同裝置要都顯示一樣，可以直接使用</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">/* 手機或電腦上預覽，字體大小都會是一樣(16px) */</span>\n<span class=\"hljs-selector-class\">.text</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n</code></pre>\n<h3>%</h3>\n<ul>\n<li>相對單位：<strong>相對於父元素的大小</strong></li>\n<li>常用於調整 container 內的子元素大小或位置</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-comment\">/* 子元素寬度永遠是父元素的 30%，父層寬度只要一改變，子元素寬度也會一起更新 */</span>\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">30%</span>;\n}\n</code></pre>\n<h3>em</h3>\n<ul>\n<li>相對單位：視使用的情境，會有不同計算方式<br />\n_ <strong><code>font-size</code></strong>： <strong>相對於元素的父元素的字體大小</strong><br />\ne.g. 子元素的 <code>font-size: 0.5em</code>，該子元素字體大小即為父元素的 0.5 倍<br />\n_ <strong><code>other properties</code>(非字型大小的屬性)</strong>：<strong>相對於元素的當前字體大小</strong><br />\ne.g. 元素的字體大小為<code>16px</code>，則 <code>width: 2em</code> 將等於 <code>32px</code> (元素未設定字體大小，則繼承父元素的字體大小)</li>\n<li>方面實現元素內部組件之間的比例關係<br />\ne.g. 想基於父元素字體大小，客製內部大/中/小相對字體</li>\n</ul>\n<pre class=\"hljs\"><code><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n\n<span class=\"hljs-selector-class\">.grandparent</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">24px</span>;\n}\n\n<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">20px</span>;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-comment\">/* child 實際字體大小： 20px * 1.5 = 30px */</span>\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.5em</span>;\n  <span class=\"hljs-comment\">/* child 內距(非字型大小的屬性，與本身的 font-size 相關)： 30px * 2 = 60px */</span>\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2em</span>;\n}\n</code></pre>\n<br/>\n<p>如果父元素未指定字型大小的值，則會在 DOM tree 向上尋找。如果一直到根元素（<code>&lt;html&gt;</code>）都沒有指定字型大小，則瀏覽器將使用預設值 <code>16px</code>。</p>\n<pre class=\"hljs\"><code><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n\n<span class=\"hljs-selector-class\">.grandparent</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">24px</span>;\n}\n\n<span class=\"hljs-comment\">/* .parent {\n  font-size: 20px;\n} */</span>\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-comment\">/* child 實際字體大小(往外找到 .grandparent)： 24 * 1.5 = 36px */</span>\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.5em</span>;\n  <span class=\"hljs-comment\">/* child 內距： 36px * 2 = 72px */</span>\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">2em</span>;\n}\n</code></pre>\n<h3>rem (root em)</h3>\n<blockquote>\n<p>這邊基本關係就是： root = 根元素 = <code>&lt;html&gt;</code>，<code>&lt;html&gt;</code> 未設定則瀏覽器將使用預設值 <code>16px</code>。</p>\n</blockquote>\n<ul>\n<li>相對單位：<strong>相對於根元素的字型大小</strong>，根元素的字型大小為 <code>1rem</code></li>\n<li>不受父元素的字體大小影響，解決 <code>em</code> 缺點<br />\ne.g. 當標題設定為 <code>font-size: 2rem</code>，使用在畫面任何一地方，標題大小都會相同</li>\n<li></li>\n</ul>\n<h3>vw</h3>\n<ul>\n<li>相對單位：<strong>相對於 viewport 的高度</strong>，<code>1vw</code> = viewport 高度的 1/100</li>\n<li>元素如果需要針對 viewport/window 大小、位置有特殊需求可使用</li>\n</ul>\n<h3>vh</h3>\n<ul>\n<li>相對單位：<strong>相對於 viewport 的寬度</strong>，<code>1vh</code> = viewport 寬度的 1/100</li>\n<li>元素如果需要針對 viewport/window 大小、位置有特殊需求可使用<br />\ne.g. 畫面如果要撐滿整個視窗，高度可設置 100vh</li>\n</ul>\n<h2 id=\"em 和 rem 如何選擇\" title=\"em 和 rem 如何選擇\"><a href=\"#em 和 rem 如何選擇\">em 和 rem 如何選擇</a></h2>\n<p>如果沒有特殊需求要使用絕對單位 e.g. <code>px</code>，大部分會選擇相對單位開發響應式頁面，即可以隨著頁面大小自適應。</p>\n<p>大多數瀏覽器 <code>1rem</code> 和 <code>1em</code> 都等於 <code>16px</code> (root element)，但因為 em 會自動繼承其父元素字體大小，如果 DOM 層級過深，很容易會發生預期以外的效果，所以通常網頁開發會優先選擇 <code>rem</code>，來保持一致性和可預測性，如 <a  href=\"https://tailwindcss.com/docs/width\" target=\"_blank\" rel=\"noreferrer noopener\">tailwindcss</a> 用 <code>rem</code> 來制定寬度標準。</p>\n<p>除非是在需要只考慮附近父元素字體大小，才會選擇 <code>em</code>，總歸一句，就是要先確定設計需求，再進一步選擇需要的單位。</p>\n<h3>em</h3>\n<pre class=\"hljs\"><code><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">10px</span>;\n}\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2em</span>;\n}\n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;parent&quot;</span>&gt;</span>\n  第一層 - 10px\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n    第二層 - 20px\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n      第三層 - 40px\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n        第四層 - 80px\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<div style=\"font-size: 10px;\">\n  第一層 - 10px\n  <div style=\"font-size: 2em;\">\n  第二層 - 20px\n    <div style=\"font-size: 2em;\">\n   第三層 - 40px\n      <div style=\"font-size: 2em;\">\n         第四層 - 80px\n      </div>\n    </div>\n  </div>\n</div>\n<h3>rem</h3>\n<pre class=\"hljs\"><code><span class=\"hljs-selector-tag\">html</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">16px</span>;\n}\n<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">10px</span>;\n}\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2rem</span>;\n}\n</code></pre>\n<pre class=\"hljs\"><code><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;parent&quot;</span>&gt;</span>\n  第一層 - 10px\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n    第二層 - 16px\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n      第三層 - 16px\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;child&quot;</span>&gt;</span>\n        第四層 - 16px\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<div style=\"font-size: 10px;\">\n  第一層 - 10px\n  <div style=\"font-size: 16px;\">\n   第二層 - 16px\n    <div style=\"font-size: 16px;\">\n     第三層 - 16px\n      <div style=\"font-size: 16px;\">\n       第四層 - 16px\n      </div>\n    </div>\n  </div>\n</div>\n","toc":{"title":"CSS Units - <code>px</code>、<code>％</code>、<code>em</code>、<code>rem</code>","subtitles":["Absolute vs. Relative Units","常見單位介紹","em 和 rem 如何選擇"]}}